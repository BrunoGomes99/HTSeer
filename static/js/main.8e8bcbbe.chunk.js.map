{"version":3,"sources":["components/ListItems.js","pages/Home.js","components/Actions.js","components/TreeChart.js","pages/InputData.js","pages/Modeling.js","pages/Report.js","routes.js","components/Dashboard.js","App.js","index.js"],"names":["ListItemLink","props","icon","primary","to","renderLink","React","itemProps","ref","role","undefined","ListItem","button","component","ListItemIcon","ListItemText","ListItems","List","Home","useStyles","makeStyles","theme","labelSliders","marginTop","width","alignSelf","sliders","datePicker","valuetext","value","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","preProcessing","models","reconciliation","ActionsContent","classes","valuePercent","setValuePercent","valueForecast","setValueForecast","Date","setValue","reconciliationOptions","setReconciliationOptions","modelOptions","setModelOptions","preProcessingOptions","setPreProcessingOptions","Paper","sx","p","display","flexDirection","Button","variant","size","startIcon","className","LocalizationProvider","dateAdapter","AdapterDateFns","locale","ptBR","utils","DateFnsUtils","DatePicker","label","openTo","views","minDate","maxDate","mask","onChange","newValue","renderInput","params","TextField","Typography","gutterBottom","Slider","getAriaLabel","event","valueLabelDisplay","getAriaValueText","step","marks","FormControl","m","InputLabel","id","Select","labelId","multiple","target","split","input","OutlinedInput","renderValue","selected","join","map","name","MenuItem","Checkbox","checked","indexOf","min","max","Actions","TreeChart","option","tooltip","trigger","triggerOn","series","type","data","top","left","bottom","right","symbolSize","position","verticalAlign","align","fontSize","leaves","emphasis","focus","expandAndCollapse","animationDuration","animationDurationUpdate","Component","InputData","Container","maxWidth","mt","mb","Grid","container","spacing","item","xs","md","lg","Report","RoutesHtseer","element","path","Copyright","color","href","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","createTheme","DashboardContent","setOpen","toggleDrawer","ThemeProvider","Box","CssBaseline","Toolbar","pr","IconButton","edge","onClick","marginRight","noWrap","flexGrow","alignItems","justifyContent","px","Divider","backgroundColor","palette","mode","grey","height","overflow","pt","Dashboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e8bcbbe.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@mui/material/List';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Paper from '@mui/material/Paper';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport InboxIcon from '@mui/icons-material/Inbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link as RouterLink, Route, MemoryRouter } from 'react-router-dom';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n      }),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ListItems() {\r\n  return (\r\n    <>\r\n          <List aria-label=\"link pages\">\r\n            <ListItemLink to=\"home\" primary=\"Home\" icon={<HomeIcon />} />\r\n            <ListItemLink to=\"inputData\" primary=\"Novo modelo preditivo\" icon={<AddCircleOutlineIcon />} />\r\n            <ListItemLink to=\"modeling\" primary=\"Visualizar previsões\" icon={<BarChartIcon />} />\r\n            <ListItemLink to=\"report\" primary=\"Criar Relatório\" icon={<EditIcon />} />\r\n          </List>\r\n     </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Home(){\r\n    return (\r\n        <h1>Home em construção</h1>\r\n    )\r\n}\r\n\r\n","import * as React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { Button, Slider, Select, MenuItem, FormControl, InputLabel, TextField, Typography, Paper, Container, Grid} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\n\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport DropDown from './DropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelSliders: {\r\n        marginTop: \"15px\",\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    sliders:{\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    button:{\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    datePicker:{\r\n        marginTop: \"15px\",\r\n        alignSelf: \"center\",\r\n        width: \"300px\"\r\n    }\r\n}));\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst preProcessing = [\r\n    'Todos',\r\n    'Normalização',\r\n    'Modelagem de feriados',\r\n    'Adição de variáveis exógenas'\r\n]\r\n\r\nconst models = [\r\n    'Todos',\r\n    'Auto-Arima',\r\n    'Amortecimento Exponencial',\r\n    'Prophet'\r\n]\r\n\r\nconst reconciliation = [\r\n    'Todos',\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nfunction ActionsContent() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const [valuePercent, setValuePercent] = React.useState(80);\r\n    const [valueForecast, setValueForecast] = React.useState(28);\r\n    const [age, setAge] = React.useState('');\r\n\r\n    // const [value, setValue] = React.useState([2011, 2012]);\r\n    // const handleChange = (event, newValue) => {\r\n    //     setValue(newValue);\r\n    //     console.log(newValue);\r\n    // };\r\n\r\n    const [value, setValue] = React.useState(new Date('2010-01-02'));\r\n\r\n    const handleChangePercent = (event, newValue) => {\r\n        setValuePercent(newValue)\r\n    };\r\n\r\n    const handleChangeForecast = (event, newValue) => {\r\n        setValueForecast(newValue)\r\n    };\r\n\r\n    const handleChangeProcess = (event) => {\r\n        setAge(event.target.value);\r\n    };\r\n    const [reconciliationOptions, setReconciliationOptions] = React.useState([]);\r\n\r\n    const handleChangeReconciliation = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setReconciliationOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [modelOptions, setModelOptions] = React.useState([]);\r\n\r\n    const handleChangeModel = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setModelOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    const [preProcessingOptions, setPreProcessingOptions] = React.useState([]);\r\n\r\n    const handleChangePreProcessing = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setPreProcessingOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}\r\n        >\r\n            <Button variant=\"outlined\" size=\"small\" startIcon={<FileDownloadIcon />} className={classes.button} >\r\n                Importação dos dados\r\n            </Button>\r\n            {/* <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Recorte de dados temporais: {value[0] + \" - \" + value[1]}\r\n            </Typography> */}\r\n            {/* <Slider\r\n                getAriaLabel={() => 'Time range'}\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                marks\r\n                size=\"small\"\r\n                min={2010}\r\n                max={2017}\r\n            /> */}\r\n            <LocalizationProvider dateAdapter={AdapterDateFns}  locale={ptBR} utils={DateFnsUtils}>\r\n                <DatePicker\r\n                    className={classes.datePicker}\r\n                    label=\"Recorte de dados temporais\"\r\n                    openTo=\"year\"\r\n                    views={['year', 'month', 'day']}\r\n                    minDate={new Date('2010-01-02')}\r\n                    maxDate={new Date('2017-12-31')}\r\n                    mask={'__/__/____'}\r\n                    value={value}\r\n                    onChange={(newValue) => {\r\n                        setValue(newValue);\r\n                    }}\r\n                    renderInput={(params) => <TextField {...params} className={classes.datePicker}/>}\r\n                />\r\n            </LocalizationProvider>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Percentual de Treinamento: {valuePercent + \"%\"}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Train percent'}\r\n                value={valuePercent}\r\n                onChange={handleChangePercent}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                step={10}\r\n                size=\"small\"\r\n                marks\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Pré-processamento de dados</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={preProcessingOptions}\r\n                    onChange={handleChangePreProcessing}\r\n                    input={<OutlinedInput label=\"Pré-processamento de dados\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {preProcessing.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={preProcessingOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Seleção de modelos</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={modelOptions}\r\n                    onChange={handleChangeModel}\r\n                    input={<OutlinedInput label=\"Seleção de modelos\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {models.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={modelOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Técnicas de reconciliação</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={reconciliationOptions}\r\n                    onChange={handleChangeReconciliation}\r\n                    input={<OutlinedInput label=\"Técnicas de reconciliação\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {reconciliation.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={reconciliationOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Números de dias para previsão: {valueForecast}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Forecast days'}\r\n                value={valueForecast}\r\n                onChange={handleChangeForecast}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                step={1}\r\n                size=\"small\"\r\n                marks\r\n                min={1}\r\n                max={28}\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function Actions() {\r\n    return <ActionsContent />;\r\n}","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n//import data from './data/states_hierarchy.json'\r\n//import data from './data/states.json'\r\nimport data from './data/walmart.json'\r\n\r\nclass TreeChart extends Component {\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        triggerOn: 'mousemove'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: 'tree',\r\n                            data: [data],\r\n                            top: '1%',\r\n                            left: '7%',\r\n                            bottom: '1%',\r\n                            right: '20%',\r\n                            symbolSize: 7,\r\n                            label: {\r\n                                position: 'left',\r\n                                verticalAlign: 'middle',\r\n                                align: 'right',\r\n                                fontSize: 9\r\n                            },\r\n                            leaves: {\r\n                                label: {\r\n                                    position: 'right',\r\n                                    verticalAlign: 'middle',\r\n                                    align: 'left'\r\n                                }\r\n                            },\r\n                            emphasis: {\r\n                                focus: 'descendant'\r\n                            },\r\n                            expandAndCollapse: true,\r\n                            animationDuration: 550,\r\n                            animationDurationUpdate: 750\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default TreeChart;","import * as React from 'react';\r\nimport {Container, Grid, Paper} from '@mui/material';\r\nimport Actions from '../components/Actions';\r\nimport TreeChart from '../components/TreeChart';\r\n\r\n// function InputDataContent() {\r\nexport default function InputData(){\r\n    return (\r\n        <Container id=\"inputData\" maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={5} lg={4}>\r\n                    <Actions />\r\n                </Grid>\r\n                <Grid item xs={12} md={7} lg={8}>\r\n                    <Paper\r\n                        sx={{\r\n                            p: 2,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            // height: 240,\r\n                        }}\r\n                    >\r\n                        <TreeChart />\r\n                    </Paper>\r\n                    {/* <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'row',\r\n                    // height: 240,\r\n                  }}\r\n                >\r\n                \r\n                  <Button variant=\"outlined\" size=\"small\" padding=\"10px\">\r\n                    Carregar\r\n                  </Button>\r\n                  <Button variant=\"outlined\" size=\"small\" padding=\"10px\">\r\n                    Salvar\r\n                  </Button>\r\n                  <Button variant=\"outlined\" size=\"small\" padding=\"10px\">\r\n                    Executar\r\n                  </Button>\r\n                 </Paper> */}\r\n                </Grid>\r\n                {/* Recent Deposits */}\r\n                {/* <Grid item xs={12} md={4} lg={3}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <Deposits />\r\n                </Paper>\r\n              </Grid> */}\r\n                {/* <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <LineChart />\r\n                </Paper>\r\n              </Grid> */}\r\n                {/* Recent Orders */}\r\n                {/* <Grid item xs={12}>\r\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                  <Orders />\r\n                </Paper>\r\n              </Grid> */}\r\n            </Grid>\r\n            \r\n        </Container>\r\n    )\r\n};\r\n\r\n// export default function InputData() {\r\n//     return <InputDataContent />;\r\n// }","import React from 'react';\r\n\r\nexport default function Home(){\r\n    return (\r\n        <h1>Modeling em construção</h1>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Report(){\r\n    return (\r\n        <h1>Relatório em construção</h1>\r\n    )\r\n}","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport InputData from \"./pages/InputData\";\r\nimport Modeling from \"./pages/Modeling\";\r\nimport Report from \"./pages/Report\";\r\n\r\nconst RoutesHtseer = () => {\r\n   return(\r\n       <Routes>\r\n          <Route element={ <Home/>} path = \"/\" />\r\n          <Route element={ <Home/>} path = \"HTSeer\" />\r\n          <Route element = { <Home /> }  path=\"home\" />\r\n          <Route element = { <InputData /> }  path=\"inputData\" />\r\n          <Route element = { <Modeling /> }  path=\"modeling\" />\r\n          <Route element = { <Report /> }  path=\"report\" />\r\n          <Route element = { <h1>Not Found</h1> } path=\"*\" />\r\n       </Routes>\r\n   )\r\n}\r\n\r\nexport default RoutesHtseer;","import * as React from 'react';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ListItems from \"./ListItems\";\r\nimport RoutesHtseer from '../routes';\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    '& .MuiDrawer-paper': {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: 'border-box',\r\n      ...(!open && {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n  }),\r\n);\r\n\r\nconst mdTheme = createTheme();\r\n\r\nfunction DashboardContent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              pr: '24px', // keep right padding when drawer closed\r\n            }}\r\n          >\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={toggleDrawer}\r\n              sx={{\r\n                marginRight: '36px',\r\n                ...(open && { display: 'none' }),\r\n              }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              HTSeer\r\n            </Typography>\r\n            {/* <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              px: [1],\r\n            }}\r\n          >\r\n            <IconButton onClick={toggleDrawer}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Divider />\r\n          <ListItems />\r\n          <Divider />\r\n        </Drawer>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            {/* Menu com links para as rotas */}\r\n            <RoutesHtseer />\r\n            {/* Rodapé */}\r\n            <Copyright sx={{ pt: 4 }} />\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default function Dashboard() {\r\n  return <DashboardContent />;\r\n}","import './App.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Dashboard/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}