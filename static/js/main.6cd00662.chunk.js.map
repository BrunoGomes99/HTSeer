{"version":3,"sources":["components/ListItems.js","pages/Home.js","components/Actions.js","components/TreeChart.js","pages/InputData.js","components/ActionsModeling.js","pages/Modeling.js","components/LineChart.js","components/LineChart2.js","components/BarChart.js","pages/Report.js","routes.js","images/BACKGROUND TOPO.png","images/LOGO.png","components/Dashboard.js","App.js","index.js"],"names":["ListItemLink","props","icon","primary","to","renderLink","React","itemProps","ref","role","undefined","ListItem","button","component","ListItemIcon","ListItemText","ListItems","console","log","List","columns","field","headerName","width","type","description","rows","id","entrega","data","descricao","status","Home","style","height","position","background","borderRadius","marginTop","padding","pageSize","rowsPerPageOptions","checkboxSelection","useStyles","makeStyles","theme","labelSliders","alignSelf","sliders","datePicker","datePickerTypo","marginLeft","valuetext","value","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","models","reconciliation","ActionsContent","classes","valuePercent","setValuePercent","valueForecast","setValueForecast","processing","setProcessing","Date","valueBegin","setValueBegin","valueEnd","setValueEnd","reconciliationOptions","setReconciliationOptions","modelOptions","setModelOptions","Paper","sx","p","display","flexDirection","elevation","Button","variant","size","startIcon","className","Typography","Grid","container","lg","spacing","item","LocalizationProvider","dateAdapter","AdapterDateFns","locale","ptBR","utils","DateFnsUtils","DatePicker","label","openTo","views","minDate","maxDate","mask","onChange","newValue","renderInput","params","TextField","gutterBottom","Slider","getAriaLabel","event","valueLabelDisplay","getAriaValueText","FormControl","m","InputLabel","Select","labelId","target","MenuItem","multiple","split","input","OutlinedInput","renderValue","selected","join","map","name","Checkbox","checked","indexOf","step","marks","min","max","Actions","TreeChart","option","tooltip","trigger","formatter","nomes","length","series","top","left","bottom","right","symbolSize","verticalAlign","align","fontSize","leaves","emphasis","focus","expandAndCollapse","animationDuration","animationDurationUpdate","Component","InputData","Container","maxWidth","mt","mb","xs","md","textAlign","textDecoration","treeChart","ActionsModelingContent","onclick","disabled","defaultValue","Box","Zoom","in","ActionsModeling","Modeling","LineChart","colors","color","axisPointer","legend","itemSize","feature","dataZoom","yAxisIndex","restore","axisTick","alignWithLabel","axisLine","onZero","lineStyle","seriesData","data_x","datax1","datax2","xAxisIndex","smooth","datay1","datay2","LineChart2","title","text","orient","toolbox","grid","xAxis","yAxis","linestyle","datay3","BarChart","nameLocation","nameGap","showBackground","backgroundStyle","errorMetrics","minWidth","createData","modelo","tecnica","recorte","treinamento","processamento","previsao","rmse","mape","Report","useState","valueReconciliation","setValueReconciliation","valueErrorMetrics","setValueErrorMetrics","marginBottom","direction","FormLabel","RadioGroup","FormControlLabel","control","Radio","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","row","hover","tabIndex","format","code","RoutesHtseer","element","path","Copyright","href","getFullYear","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","createTheme","cardAnalisesAbertas","CardContent","cardAnalisesAndamento","cardAnalisesFinalizadas","DashboardContent","setOpen","ThemeProvider","CssBaseline","Toolbar","alignItems","justifyContent","px","IconButton","onClick","marginRight","backgroundColor","flexGrow","overflow","src","backgroundImg","imgLogo","Card","pt","Dashboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"goDAkBA,SAASA,EAAaC,GACpB,IAAQC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,QAASC,EAAOH,EAAPG,GAEjBC,EAAaC,WACjB,kBACEA,cAAiB,SAAcC,EAAWC,GACxC,OAAO,cAAC,IAAD,yBAAYJ,GAAIA,EAAII,IAAKA,GAASD,GAAlC,IAA6CE,UAAMC,UAE9D,CAACN,IAGH,OACE,6BACE,eAACO,EAAA,EAAD,CAAUC,QAAM,EAACC,UAAWR,EAA5B,UACGH,EAAO,cAACY,EAAA,EAAD,UAAeZ,IAAuB,KAC9C,cAACa,EAAA,EAAD,CAAcZ,QAASA,SAYhB,SAASa,EAAUf,GAGhC,OAFAgB,QAAQC,IAAIjB,GAGV,mCACM,eAACkB,EAAA,EAAD,CAAM,aAAW,aAAjB,UACE,cAACnB,EAAD,CAAcI,GAAG,OAAOD,QAAQ,OAAOD,KAAM,cAAC,IAAD,MAC7C,cAACF,EAAD,CAAcI,GAAG,YAAYD,QAAQ,8BAA2BD,KAAM,cAAC,IAAD,MACtE,cAACF,EAAD,CAAcI,GAAG,WAAWD,QAAQ,0BAAuBD,KAAM,cAAC,IAAD,MACjE,cAACF,EAAD,CAAcI,GAAG,SAASD,QAAQ,qBAAkBD,KAAM,cAAC,IAAD,W,qBCjDhEkB,EAAU,CACZ,CAAEC,MAAO,KAAMC,WAAY,KAAMC,MAAO,IACxC,CAAEF,MAAO,OAAQC,WAAY,gBAAiBE,KAAM,OAAQC,YAAa,kDAA6CF,MAAO,KAC7H,CAAEF,MAAO,UAAWC,WAAY,mBAAoBG,YAAa,6BAA8BF,MAAO,KACtG,CAAEF,MAAO,YAAaC,WAAY,kBAAaG,YAAa,qCAAgCF,MAAO,KACnG,CAAEF,MAAO,SAAUC,WAAY,SAAUG,YAAa,qBAAsBF,MAAO,MAG/EG,EAAO,CACX,CAAEC,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,UACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,gBACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,cACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,UACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,gBACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,UACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,UACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,gBACpG,CAAEJ,GAAI,EAAGC,QAAS,aAAcC,KAAM,aAAcC,UAAW,kCAA6BC,OAAQ,eAGzF,SAASC,IACpB,OACI,sBAAKC,MAAO,CACVC,OAAQ,QACRC,SAAS,WACTC,WAAY,UACZC,aAAc,SACdC,UAAW,SACXC,QAAS,yBANX,UAQA,6CACA,cAAC,IAAD,CACEb,KAAMA,EACNN,QAASA,EACToB,SAAU,EACVC,mBAAoB,CAAC,GACrBC,mBAAiB,O,6KCxB3B,IAAMC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCC,aAAc,CACVR,UAAW,OACXf,MAAO,QACPwB,UAAW,UAEfC,QAAS,CACLzB,MAAO,QACPwB,UAAW,UAEfnC,OAAQ,CACJW,MAAO,QACPwB,UAAW,UAEfE,WAAY,CACRX,UAAW,OACXS,UAAW,UAGfG,eAAgB,CACZC,WAAY,OACZb,UAAW,YAInB,SAASc,GAAUC,GACf,MAAM,GAAN,OAAUA,GAGd,IAEMC,GAAY,CACdC,WAAY,CACRtB,MAAO,CACHuB,UAAWC,IACXlC,MAAO,OAUbmC,GAAS,CACX,QACA,aACA,4BACA,WAGEC,GAAiB,CACnB,QACA,yBACA,sCACA,kCACA,wBACA,qCACA,iCACA,aAGJ,SAASC,KACL,IAAMC,EAAUlB,KAGhB,EAAwCrC,WAAe,IAAvD,mBAAOwD,EAAP,KAAqBC,EAArB,KACA,EAA0CzD,WAAe,IAAzD,mBAAO0D,EAAP,KAAsBC,EAAtB,KACA,EAAoC3D,WAAe,IAAnD,mBAAO4D,EAAP,KAAmBC,EAAnB,KAQA,EAAoC7D,WAAe,IAAI8D,KAAK,eAA5D,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgChE,WAAe,IAAI8D,KAAK,eAAxD,mBAAOG,EAAP,KAAiBC,EAAjB,KAaA,EAA0DlE,WAAe,IAAzE,mBAAOmE,EAAP,KAA8BC,EAA9B,KAWA,EAAwCpE,WAAe,IAAvD,mBAAOqE,EAAP,KAAqBC,EAArB,KAYA,EAAwDtE,WAAe,IAAvE,6BAYA,OACI,eAACuE,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,UAQI,cAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,KAAK,QAAQC,UAAW,cAAC,IAAD,IAAsBC,UAAW1B,EAAQjD,OAA5F,wCAIA,cAAC4E,EAAA,EAAD,CAAYD,UAAW1B,EAAQX,eAA/B,wCACA,eAACuC,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAAIV,cAAe,MAAOW,QAAS,EAAvD,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,EAAf,SACI,cAACG,GAAA,EAAD,CAAsBC,YAAaC,KAAgBC,OAAQC,KAAMC,MAAOC,KAAxE,SACI,cAACC,GAAA,EAAD,CACIC,MAAM,YACNC,OAAO,OACPC,MAAO,CAAC,OAAQ,QAAS,OACzBC,QAAS,IAAIrC,KAAK,cAClBsC,QAAS,IAAItC,KAAK,cAClBuC,KAAM,aACNtD,MAAOgB,EACPuC,SAAU,SAACC,GACPvC,EAAcuC,IAElBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBxB,UAAW1B,EAAQZ,qBAI/E,cAACwC,EAAA,EAAD,CAAMI,MAAI,EAACF,GAAI,EAAf,SACI,cAACG,GAAA,EAAD,CAAsBC,YAAaC,KAAgBC,OAAQC,KAAMC,MAAOC,KAAxE,SACI,cAACC,GAAA,EAAD,CACIC,MAAM,MACNC,OAAO,OACPC,MAAO,CAAC,OAAQ,QAAS,OACzBC,QAAS,IAAIrC,KAAK,cAClBsC,QAAS,IAAItC,KAAK,cAClBuC,KAAM,aACNtD,MAAOkB,EACPqC,SAAU,SAACC,GACPrC,EAAYqC,IAEhBC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,2BAAeD,GAAf,IAAuBxB,UAAW1B,EAAQZ,wBAKnF,eAACuC,EAAA,EAAD,CAAYJ,QAAQ,YAAY6B,cAAY,EAAC1B,UAAW1B,EAAQf,aAAhE,wCACgCgB,EAAe,OAE/C,cAACoD,EAAA,EAAD,CACI3B,UAAW1B,EAAQb,QACnBmE,aAAc,iBAAM,iBACpB9D,MAAOS,EACP8C,SAvGgB,SAACQ,EAAOP,GAChC9C,EAAgB8C,IAuGRQ,kBAAkB,OAClBC,iBAAkBlE,GAElBiC,KAAK,UAwBT,eAACkC,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAAhC,UACI,cAACkG,GAAA,EAAD,CAAY9F,GAAG,2BAAf,2CACA,eAAC+F,GAAA,EAAD,CACIC,QAAQ,2BACRhG,GAAG,qBACH0B,MAAOa,EACPoC,MAAM,gCACNM,SAlIe,SAACQ,GAC5BjD,EAAciD,EAAMQ,OAAOvE,QA4HnB,UAOI,cAACwE,GAAA,EAAD,CAAUxE,MAAO,GAAjB,oBACA,cAACwE,GAAA,EAAD,CAAUxE,MAAO,GAAjB,sCAGR,eAACkE,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAAhC,UACI,cAACkG,GAAA,EAAD,CAAY9F,GAAG,+BAAf,sCACA,cAAC+F,GAAA,EAAD,CACIC,QAAQ,+BACRhG,GAAG,yBACHmG,UAAQ,EACRzE,MAAOsB,EACPiC,SA/HU,SAACQ,GACvB,IACc/D,EACV+D,EADAQ,OAAUvE,MAEduB,EACqB,kBAAVvB,EAAqBA,EAAM0E,MAAM,KAAO1E,IA2HvC2E,MAAO,cAACC,GAAA,EAAD,CAAe3B,MAAM,6BAC5B4B,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OACzC9E,UAAWA,GARf,SAUKI,GAAO2E,KAAI,SAACC,GAAD,OACR,eAACT,GAAA,EAAD,CAAqBxE,MAAOiF,EAA5B,UACI,cAACC,GAAA,EAAD,CAAUC,QAAS7D,EAAa8D,QAAQH,IAAS,IACjD,cAACvH,EAAA,EAAD,CAAcZ,QAASmI,MAFZA,WAO3B,eAACf,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAAhC,UACI,cAACkG,GAAA,EAAD,CAAY9F,GAAG,+BAAf,gDACA,cAAC+F,GAAA,EAAD,CACIC,QAAQ,+BACRhG,GAAG,yBACHmG,UAAQ,EACRzE,MAAOoB,EACPmC,SA9JmB,SAACQ,GAChC,IACc/D,EACV+D,EADAQ,OAAUvE,MAEdqB,EACqB,kBAAVrB,EAAqBA,EAAM0E,MAAM,KAAO1E,IA0JvC2E,MAAO,cAACC,GAAA,EAAD,CAAe3B,MAAM,uCAC5B4B,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OACzC9E,UAAWA,GARf,SAUKK,GAAe0E,KAAI,SAACC,GAAD,OAChB,eAACT,GAAA,EAAD,CAAqBxE,MAAOiF,EAA5B,UACI,cAACC,GAAA,EAAD,CAAUC,QAAS/D,EAAsBgE,QAAQH,IAAS,IAC1D,cAACvH,EAAA,EAAD,CAAcZ,QAASmI,MAFZA,WAO3B,eAAC9C,EAAA,EAAD,CAAYJ,QAAQ,YAAY6B,cAAY,EAAC1B,UAAW1B,EAAQf,aAAhE,kDACoCkB,KAEpC,cAACkD,EAAA,EAAD,CACI3B,UAAW1B,EAAQb,QACnBmE,aAAc,iBAAM,iBACpB9D,MAAOW,EACP4C,SA3LiB,SAACQ,EAAOP,GACjC5C,EAAiB4C,IA2LTQ,kBAAkB,OAClBC,iBAAkBlE,GAClBsF,KAAM,EACNrD,KAAK,QACLsD,OAAK,EACLC,IAAK,EACLC,IAAK,QAON,SAASC,KACpB,OAAO,cAAClF,GAAD,I,2DCxSLmF,G,gKACF,WACI,OACI,cAAC,KAAD,CACIC,OAAQ,CACJC,QAAS,CACLC,QAAS,CAACrH,IAAMyG,KAChBa,UAAW,SAAUpC,GACjB,OAAgC,GAA5BA,EAAOlF,KAAKuH,MAAMC,OACd,MAAN,OAAatC,EAAOlF,KAAKuH,MAAM,GAA/B,iBAA0CrC,EAAOlF,KAAKwB,MAAM,IACvB,GAA5B0D,EAAOlF,KAAKuH,MAAMC,OACrB,MAAN,OAAatC,EAAOlF,KAAKuH,MAAM,GAA/B,iBAA0CrC,EAAOlF,KAAKwB,MAAM,GAA5D,wDACU0D,EAAOlF,KAAKuH,MAAM,GAD5B,iBACuCrC,EAAOlF,KAAKwB,MAAM,IACpB,GAA5B0D,EAAOlF,KAAKuH,MAAMC,OACrB,MAAN,OAAatC,EAAOlF,KAAKuH,MAAM,GAA/B,iBAA0CrC,EAAOlF,KAAKwB,MAAM,GAA5D,wDACU0D,EAAOlF,KAAKuH,MAAM,GAD5B,iBACuCrC,EAAOlF,KAAKwB,MAAM,GADzD,wDAEU0D,EAAOlF,KAAKuH,MAAM,GAF5B,iBAEuCrC,EAAOlF,KAAKwB,MAAM,GAFzD,SAGqC,GAA5B0D,EAAOlF,KAAKuH,MAAMC,OACrB,MAAN,OAAatC,EAAOlF,KAAKuH,MAAM,GAA/B,iBAA0CrC,EAAOlF,KAAKwB,MAAM,GAA5D,wDACU0D,EAAOlF,KAAKuH,MAAM,GAD5B,iBACuCrC,EAAOlF,KAAKwB,MAAM,GADzD,wDAEU0D,EAAOlF,KAAKuH,MAAM,GAF5B,iBAEuCrC,EAAOlF,KAAKwB,MAAM,GAFzD,wDAGU0D,EAAOlF,KAAKuH,MAAM,GAH5B,iBAGuCrC,EAAOlF,KAAKwB,MAAM,GAHzD,SAMM,MAAN,OAAa0D,EAAOlF,KAAKuH,MAAM,GAA/B,iBAA0CrC,EAAOlF,KAAKwB,MAAM,GAA5D,wDACU0D,EAAOlF,KAAKuH,MAAM,GAD5B,iBACuCrC,EAAOlF,KAAKwB,MAAM,GADzD,wDAEU0D,EAAOlF,KAAKuH,MAAM,GAF5B,iBAEuCrC,EAAOlF,KAAKwB,MAAM,GAFzD,wDAGU0D,EAAOlF,KAAKuH,MAAM,GAH5B,iBAGuCrC,EAAOlF,KAAKwB,MAAM,GAHzD,wDAIU0D,EAAOlF,KAAKuH,MAAM,GAJ5B,iBAIuCrC,EAAOlF,KAAKwB,MAAM,GAJzD,WASViG,OAAQ,CACJ,CACI9H,KAAM,OACNK,KAAM,CAACA,IACP0H,IAAK,KACLC,KAAM,KACNC,OAAQ,KACRC,MAAO,MACPC,WAAY,EACZrD,MAAO,CACHnE,SAAU,OACVyH,cAAe,SACfC,MAAO,QACPC,SAAU,GAEdC,OAAQ,CACJzD,MAAO,CACHnE,SAAU,QACVyH,cAAe,SACfC,MAAO,SAGfG,SAAU,CACNC,MAAO,cAEXC,mBAAmB,EACnBC,kBAAmB,IACnBC,wBAAyB,a,GA5D7BC,aAoETtB,M,0CClEA,SAASuB,KACtB,OACE,cAACC,EAAA,EAAD,CAAW5I,GAAG,YAAY6I,SAAS,KAAK1F,GAAI,CAAE2F,GAAI,EAAGC,GAAI,GAAzD,SACE,eAACjF,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAzB,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACE,cAACmD,GAAD,MAEF,eAACrD,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAAG5C,UAAU,SAA3C,UACE,cAAC0C,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAf,SACE,cAAC9F,EAAA,EAAD,CACEC,GAAI,CACFC,EAAG,EACHC,QAAS,OACTC,cAAe,SACf/C,OAAQ,KAEVgD,UAAY,EAPd,SASE,cAAC,GAAD,QAGJ,eAACO,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAAC8E,GAAI,GAAI1I,MAAO,CAAEK,UAAW,QAAjD,UACE,eAACmD,EAAA,EAAD,CAAMC,WAAS,EAACG,MAAI,EAAC8E,GAAI,EAAG/E,QAAS,EAArC,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACE,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAW,cAAC,IAAD,IAAvC,wBAIF,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACE,cAACR,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAW,cAAC,KAAD,IAAvC,yBAKJ,cAACG,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,EAAG1I,MAAO,CAAE4I,UAAW,OAAtC,SACE,cAAC,IAAD,CAAMzK,GAAG,YAAY6B,MAAO,CAAC6I,eAAgB,QAA7C,SACA,cAAC3F,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAW,cAAC,KAAD,IAAvC,qC,cCnCR3C,GAAYC,cAAW,SAACC,GAAD,MAAY,CACrCjC,OAAQ,CACJW,MAAO,QACPwB,UAAW,UAEfgI,UAAW,CACPzI,UAAW,OACXa,WAAY,YAQdG,GAAY,CACdC,WAAY,CACRtB,MAAO,CACHuB,UAAWC,IACXlC,MAAO,OAMbmC,GAAS,CACX,QACA,aACA,4BACA,WAGEC,GAAiB,CACnB,QACA,yBACA,sCACA,kCACA,wBACA,qCACA,iCACA,aAGJ,SAASqH,KAA0B,IACzBnH,EAAUlB,KAEhB,EAA0DrC,WAAe,IAAzE,mBAAOmE,EAAP,KAA8BC,EAA9B,KAWA,EAAwCpE,WAAe,IAAvD,mBAAOqE,EAAP,KAAqBC,EAArB,KAWA,EAA8BtE,YAAe,GAA7C,mBAAO2K,EAAP,UAgBA,OACI,eAACpG,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,UAWI,cAAC8B,EAAA,EAAD,CAAWlC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAC1B2J,UAAQ,EACRvJ,GAAG,kBACH2E,MAAM,6BACN6E,aAAa,eACb/F,QAAQ,WAEZ,eAACmC,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAAhC,UACI,cAACkG,GAAA,EAAD,CAAY9F,GAAG,+BAAf,sCACA,cAAC+F,GAAA,EAAD,CACIC,QAAQ,+BACRhG,GAAG,yBACHmG,UAAQ,EACRzE,MAAOsB,EACPiC,SAnDU,SAACQ,GACvB,IACc/D,EACV+D,EADAQ,OAAUvE,MAEduB,EACqB,kBAAVvB,EAAqBA,EAAM0E,MAAM,KAAO1E,IA+CvC2E,MAAO,cAACC,GAAA,EAAD,CAAe3B,MAAM,6BAC5B4B,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OACzC9E,UAAWA,GARf,SAUKI,GAAO2E,KAAI,SAACC,GAAD,OACR,eAACT,GAAA,EAAD,CAAqBxE,MAAOiF,EAA5B,UACI,cAACC,GAAA,EAAD,CAAUC,QAAS7D,EAAa8D,QAAQH,IAAS,IACjD,cAACvH,EAAA,EAAD,CAAcZ,QAASmI,MAFZA,WAO3B,eAACf,EAAA,EAAD,CAAazC,GAAI,CAAE0C,EAAG,EAAGjG,MAAO,KAAhC,UACI,cAACkG,GAAA,EAAD,CAAY9F,GAAG,+BAAf,gDACA,cAAC+F,GAAA,EAAD,CACIC,QAAQ,+BACRhG,GAAG,yBACHmG,UAAQ,EACRzE,MAAOoB,EACPmC,SAlFmB,SAACQ,GAChC,IACc/D,EACV+D,EADAQ,OAAUvE,MAEdqB,EACqB,kBAAVrB,EAAqBA,EAAM0E,MAAM,KAAO1E,IA8EvC2E,MAAO,cAACC,GAAA,EAAD,CAAe3B,MAAM,uCAC5B4B,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OACzC9E,UAAWA,GARf,SAUKK,GAAe0E,KAAI,SAACC,GAAD,OAChB,eAACT,GAAA,EAAD,CAAqBxE,MAAOiF,EAA5B,UACI,cAACC,GAAA,EAAD,CAAUC,QAAS/D,EAAsBgE,QAAQH,IAAS,IAC1D,cAACvH,EAAA,EAAD,CAAcZ,QAASmI,MAFZA,WAO3B,eAAC7C,EAAA,EAAD,CAAMI,MAAI,EAACN,UAAW1B,EAAQkH,UAA9B,UACI,cAACK,EAAA,EAAD,CAAKtG,GAAI,CAAEE,QAAS,QAApB,SACI,cAACQ,EAAA,EAAD,yCAMJ,cAAC6F,GAAA,EAAD,CAAMC,GAAIL,EAAV,SACI,cAAC,GAAD,YAOL,SAASM,KACpB,OAAO,cAACP,GAAD,ICrKI,SAASQ,KACpB,OACI,cAACjB,EAAA,EAAD,CAAWC,SAAS,KAAK1F,GAAI,CAAE2F,GAAI,EAAGC,GAAI,GAA1C,SACI,eAACjF,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAzB,UACI,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACI,cAAC4F,GAAD,MAEJ,cAAC9F,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACI,cAACd,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAY,EANhB,SAQI,cAACO,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,EAAGC,GAAI,EAAGjF,GAAI,EAA7B,SACI,cAACH,EAAA,EAAD,wD,iHClBtBiG,G,gKACF,WAAU,IAAD,EACCC,EAAS,CAAC,UAAW,WAC3B,OACI,cAAC,KAAD,CACI1C,QAAM,GACF2C,MAAOD,EACPzC,QAAS,CACLC,QAAS,OACT0C,YAAa,CACTpK,KAAM,UAGdqK,OAAQ,CAACtC,IAAK,WARZ,wBASO,CACLL,QAAS,SAVX,wBAaO,CACLM,KAAM,QACNsC,SAAU,GACVvC,IAAK,GACLwC,QAAS,CACPC,SAAU,CACRC,WAAY,QAEdC,QAAS,MArBb,qBAwBI,CACF3C,IAAK,GACLE,OAAQ,KA1BV,sBA4BK,CACH,CACIjI,KAAM,WACN2K,SAAU,CACNC,gBAAgB,GAEpBC,SAAU,CACNC,QAAQ,EACRC,UAAW,CACPZ,MAAOD,EAAO,KAGtBE,YAAa,CACTtF,MAAO,CACH6C,UAAW,SAAUpC,GACjB,MACI,kBACAA,EAAO1D,OACN0D,EAAOyF,WAAWnD,OAAS,SAAMtC,EAAOyF,WAAW,GAAG3K,KAAO,OAK9EA,KAAM4K,GAAOC,QAEjB,CACIlL,KAAM,WACN2K,SAAU,CACNC,gBAAgB,GAEpBC,SAAU,CACNC,QAAQ,EACRC,UAAW,CACPZ,MAAOD,EAAO,KAGtBE,YAAa,CACTtF,MAAO,CACH6C,UAAW,SAAUpC,GACjB,MACI,kBACAA,EAAO1D,OACN0D,EAAOyF,WAAWnD,OAAS,SAAMtC,EAAOyF,WAAW,GAAG3K,KAAO,OAK9EA,KAAM4K,GAAOE,UA3EnB,sBA8EK,CACH,CACInL,KAAM,WAhFZ,uBAmFM,CACJ,CACI8G,KAAM,eACN9G,KAAM,OACNoL,WAAY,EACZC,QAAQ,EACR7C,SAAU,CACNC,MAAO,UAEXpI,KAAM4K,GAAOK,QAEjB,CACIxE,KAAM,WACN9G,KAAM,OACNqL,QAAQ,EACR7C,SAAU,CACNC,MAAO,UAEXpI,KAAM4K,GAAOM,UArGnB,S,GALE1C,aAkHToB,MClHTuB,G,gKACF,WAEI,OACI,cAAC,KAAD,CACIhE,OAAQ,CACJ2C,MAJG,CAAC,UAAW,UAAU,WAWzBsB,MAAO,CACHzD,KAAM,OACN0D,KAAM,6BAEVrB,OAAQ,CACJsB,OAAQ,WACRzD,MAAO,GACPH,IAAK,IAETN,QAAS,CACLC,QAAS,QAGbkE,QAAS,CACL5D,KAAM,SACNsC,SAAU,GACVvC,IAAK,GACLwC,QAAS,CACPC,SAAU,CACRC,WAAY,QAEdC,QAAS,KAGfmB,KAAM,CACF9D,IAAK,GACLE,OAAQ,IAEZ6D,MACI,CACI9L,KAAM,WAqBNK,KAAM4K,GAAOC,QA2BrBa,MAAO,CACH,CACI/L,KAAM,UAGd8H,OAAQ,CACJ,CACIhB,KAAM,gBACN9G,KAAM,OAENqL,QAAQ,EACR7C,SAAU,CACNC,MAAO,UAEXpI,KAAM4K,GAAOK,QAEjB,CACIxE,KAAM,WACN9G,KAAM,OACN+K,UAAW,CACP/K,KAAM,UAEVqL,QAAQ,EACR7C,SAAU,CACNC,MAAO,UAEXpI,KAAM4K,GAAOM,QAEjB,CACIzE,KAAM,WACN9G,KAAM,OACN+K,UAAW,CACP/K,KAAM,UAEVgM,UAAW,CACPhM,KAAM,UAEVqL,QAAQ,EACR7C,SAAU,CACNC,MAAO,UAGXpI,KAAM4K,GAAOgB,gB,GArIhBpD,aA6IV2C,MC9ITU,G,gKACF,WACI,OACI,cAAC,KAAD,CACI1E,OAAQ,CACJiE,MAAO,CACHC,KAAM,sBAEVI,MAAO,CAAC,CACJ9L,KAAM,WACNK,KAAM,CAAC,UAAW,aAAe,kBACjCyG,KAAM,SACNqF,aAAc,SACdC,QAAS,KAEXL,MAAO,CAAC,CACN/L,KAAM,QACN8G,KAAM,OACNqF,aAAc,SACdC,QAAS,KAGXtE,OAAQ,CACN,CACEzH,KAAM,CAAC,IAAK,GAAI,KAChBL,KAAM,MACNqM,gBAAgB,EAChBC,gBAAiB,CACfnC,MAAO,qC,GA5BZtB,aAqCRqD,MC7BT/J,GAAiB,CACnB,yBACA,sCACA,kCACA,wBACA,qCACA,iCACA,aAGEoK,GAAe,CACjB,OACA,QAGE3M,GAAU,CACZ,CAAEO,GAAI,SAAU2E,MAAO,SAAU0H,SAAU,KAC3C,CAAErM,GAAI,UAAW2E,MAAO,aAAW0H,SAAU,KAC7C,CACIrM,GAAI,UACJ2E,MAAO,mBAEPuD,MAAO,SAGX,CACIlI,GAAI,cACJ2E,MAAO,gBAEPuD,MAAO,SAGX,CACIlI,GAAI,gBACJ2E,MAAO,uBAEPuD,MAAO,SAGX,CACIlI,GAAI,WACJ2E,MAAO,mBAEPuD,MAAO,SAGX,CACIlI,GAAI,OACJ2E,MAAO,OAEPuD,MAAO,SAGX,CACIlI,GAAI,OACJ2E,MAAO,OAEPuD,MAAO,UAKf,SAASoE,GAAWC,EAAQC,EAASC,EAASC,EAAaC,EAAeC,EAAUC,EAAMC,GAEtF,MAAO,CAAEP,SAAQC,UAASC,UAASC,cAAaC,gBAAeC,WAAUC,OAAMC,QAGnF,IAAM/M,GAAO,CACTuM,GAAW,aAAc,KAAM,oBAAqB,MAAO,qBAAgB,GAAI,IAAM,KACrFA,GAAW,gBAAiB,OAAQ,oBAAqB,MAAO,IAAK,GAAI,IAAM,KAC/EA,GAAW,gBAAiB,KAAM,oBAAqB,MAAO,IAAK,EAAG,IAAM,MAGjE,SAASS,KACpB,MAAsDC,mBAAS,0BAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KAMA,EAAkDF,mBAAS,QAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAOA,OACI,eAACxE,EAAA,EAAD,CAAWC,SAAS,KAAK1F,GAAI,CAAE2F,GAAI,EAAGC,GAAI,GAA1C,UACI,eAAC7F,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,UAQI,cAACM,EAAA,EAAD,CAAYvD,MAAO,CAAE+M,aAAc,QAAnC,gFACA,eAACvJ,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAG4E,SAAS,KAAKyE,UAAW,MAArD,UAEI,cAACxJ,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SAEI,eAACd,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,UAQI,eAACqC,EAAA,EAAD,CAAa1G,UAAU,WAAvB,UACI,cAACqO,GAAA,EAAD,CAAWrO,UAAU,SAArB,gDACA,cAACsO,GAAA,EAAD,CACI,aAAW,qCACX7G,KAAK,sBACLjF,MAAOuL,EACPhI,SAxCG,SAACQ,EAAOwH,GACvCC,EAAuBD,IAmCC,SAOKjL,GAAe0E,KAAI,SAACC,GAAD,OAChB,cAAC8G,GAAA,EAAD,CAAkB/L,MAAOiF,EAAM+G,QAAS,cAACC,GAAA,EAAD,IAAWhJ,MAAOgC,EAAMjD,KAAK,kBAIjF,cAAC,GAAD,SAGR,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACI,eAACd,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,UASI,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,YAMZ,eAACL,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,SACf3C,UAAW,QAEf4C,UAAW,EAPf,UASI,cAACM,EAAA,EAAD,CAAYvD,MAAO,CAAE+M,aAAc,QAAnC,0DACA,eAACvJ,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAG4E,SAAS,KAAKyE,UAAW,MAArD,UACI,cAACxJ,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SAEI,cAACd,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,UAEnBC,UAAW,EANf,SAQI,eAACqC,EAAA,EAAD,CAAa1G,UAAU,WAAvB,UACI,cAACqO,GAAA,EAAD,CAAWrO,UAAU,SAArB,iCACA,cAACsO,GAAA,EAAD,CACI,aAAW,qCACX7G,KAAK,sBACLjF,MAAOyL,EACPlI,SA1FH,SAACQ,EAAO0H,GACrCC,EAAqBD,IAqFO,SAOKf,GAAa1F,KAAI,SAACC,GAAD,OACd,cAAC8G,GAAA,EAAD,CAAkB/L,MAAOiF,EAAM+G,QAAS,cAACC,GAAA,EAAD,IAAWhJ,MAAOgC,EAAMjD,KAAK,sBAMzF,cAACI,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIC,GAAI,EAAGjF,GAAI,EAA9B,SACI,cAAC,GAAD,YAIZ,cAACd,EAAA,EAAD,CACIC,GAAI,CACAC,EAAG,EACHC,QAAS,OACTC,cAAe,SACf3C,UAAW,QAEf4C,UAAW,EAPf,SAUI,cAACO,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAG4E,SAAS,KAAKyE,UAAW,MAArD,SACI,eAACxJ,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAf,UACI,cAACnF,EAAA,EAAD,mCACA,cAAC+J,EAAA,EAAD,IACA,cAACC,GAAA,EAAD,CAAgB1K,GAAI,CAAEtB,UAAW,KAAjC,SACI,eAACiM,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,eAA/B,UACI,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UACKxO,GAAQiH,KAAI,SAACwH,GAAD,OACT,cAACC,GAAA,EAAD,CAEIjG,MAAOgG,EAAOhG,MACd5H,MAAO,CAAE+L,SAAU6B,EAAO7B,UAH9B,SAKK6B,EAAOvJ,OAJHuJ,EAAOlO,WAS5B,cAACoO,GAAA,EAAD,UACKrO,GAEI2G,KAAI,SAAC2H,GACF,OACI,cAACJ,GAAA,EAAD,CAAUK,OAAK,EAACxP,KAAK,WAAWyP,UAAW,EAA3C,SACK9O,GAAQiH,KAAI,SAACwH,GACV,IAAMxM,EAAQ2M,EAAIH,EAAOlO,IACzB,OACI,cAACmO,GAAA,EAAD,CAA2BjG,MAAOgG,EAAOhG,MAAzC,SACKgG,EAAOM,QAA2B,kBAAV9M,EACnBwM,EAAOM,OAAO9M,GACdA,GAHMwM,EAAOlO,QAJgBqO,EAAII,0BAuB/F,cAAC3K,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,GAAIE,UAAW,MAAO5I,MAAO,CAAEK,UAAW,QAAzD,SACI,cAAC6C,EAAA,EAAD,CAAQC,QAAQ,YAAYE,UAAW,cAAC,KAAD,IAAvC,oCCzPT,IAgBQ+K,GAdM,WAClB,OACI,eAAC,IAAD,WACG,cAAC,IAAD,CAAOC,QAAU,cAACtO,EAAD,IAASuO,KALP,MAMnB,cAAC,IAAD,CAAOD,QAAU,cAACtO,EAAD,IAASuO,KAAO,WACjC,cAAC,IAAD,CAAOD,QAAY,cAACtO,EAAD,IAAYuO,KAAK,SACpC,cAAC,IAAD,CAAOD,QAAY,cAAChG,GAAD,IAAiBiG,KAAK,cACzC,cAAC,IAAD,CAAOD,QAAY,cAAC9E,GAAD,IAAgB+E,KAAK,aACxC,cAAC,IAAD,CAAOD,QAAY,cAAC5B,GAAD,IAAc6B,KAAK,WACtC,cAAC,IAAD,CAAOD,QAAY,2CAAqBC,KAAK,UClBxC,OAA0B,4CCA1B,OAA0B,iC,mFC8BzC,SAASC,GAAUvQ,GACjB,OACE,eAACuF,EAAA,EAAD,yBAAYJ,QAAQ,QAAQuG,MAAM,iBAAiB9B,MAAM,UAAa5J,GAAtE,cACG,kBACD,cAAC,IAAD,CAAM0L,MAAM,UAAU8E,KAAK,mBAA3B,0BAEQ,KACP,IAAIrM,MAAOsM,cACX,QAOQC,YAAOC,IAAW,CAC/BC,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IADhBH,EAEZ,gBAAG9N,EAAH,EAAGA,MAAOkO,EAAV,EAAUA,KAAV,oBACDC,OAAQnO,EAAMmO,OAAOC,OAAS,EAC9BC,WAAYrO,EAAMsO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxO,EAAMsO,YAAYE,OAAOC,MACjCC,SAAU1O,EAAMsO,YAAYI,SAASC,iBAEnCT,GAAQ,CACV5N,WAXgB,IAYhB5B,MAAM,eAAD,OAZW,IAYX,OACL2P,WAAYrO,EAAMsO,YAAYC,OAAO,CAAC,QAAS,UAAW,CACxDC,OAAQxO,EAAMsO,YAAYE,OAAOC,MACjCC,SAAU1O,EAAMsO,YAAYI,SAASE,sBAf3C,IAoBMC,GAASf,YAAOgB,IAAW,CAAEd,kBAAmB,SAACC,GAAD,MAAmB,SAATA,IAAjDH,EACb,gBAAG9N,EAAH,EAAGA,MAAOkO,EAAV,EAAUA,KAAV,MAAsB,CACpB,qBAAqB,aACnB5O,SAAU,WACVyP,WAAY,SACZrQ,MAzBc,IA0Bd2P,WAAYrO,EAAMsO,YAAYC,OAAO,QAAS,CAC5CC,OAAQxO,EAAMsO,YAAYE,OAAOC,MACjCC,SAAU1O,EAAMsO,YAAYI,SAASE,iBAEvCI,UAAW,eACNd,GAAD,aACFe,UAAW,SACXZ,WAAYrO,EAAMsO,YAAYC,OAAO,QAAS,CAC5CC,OAAQxO,EAAMsO,YAAYE,OAAOC,MACjCC,SAAU1O,EAAMsO,YAAYI,SAASC,gBAEvCjQ,MAAOsB,EAAM+C,QAAQ,IACpB/C,EAAMkP,YAAYC,GAAG,MAAQ,CAC5BzQ,MAAOsB,EAAM+C,QAAQ,UAOzBqM,GAAUC,cAWVC,IARH/G,EAAA,EASD,cAAC,WAAD,UACE,eAACgH,GAAA,EAAD,WACE,cAAC5M,EAAA,EAAD,CAAYV,GAAI,CAAEgF,SAAU,IAAM6B,MAAM,iBAAiB1E,cAAY,EAArE,mCAGF,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACZ,GAAI,CAAE6G,MAAO,gBAA7B,UACE,cAAClG,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,IAAf,SACE,cAACnF,EAAA,EAAD,CAAYJ,QAAQ,KAAKvE,UAAU,MAAnC,mBAIF,cAAC4E,EAAA,EAAD,UACE,cAAC,KAAD,CAAeqE,SAAS,eAG1B,cAACtE,EAAA,EAAD,CAAYV,GAAI,CAAE4F,GAAI,KAAOiB,MAAM,iBAAnC,4BAOA0G,GACJ,cAAC,WAAD,UACE,eAACD,GAAA,EAAD,WACE,cAAC5M,EAAA,EAAD,CAAYV,GAAI,CAAEgF,SAAU,IAAM6B,MAAM,iBAAiB1E,cAAY,EAArE,sCAGF,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACZ,GAAI,CAAE6G,MAAO,gBAA7B,UACE,cAAClG,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,IAAf,SACE,cAACnF,EAAA,EAAD,CAAYJ,QAAQ,KAAKvE,UAAU,MAAnC,mBAIF,cAAC4E,EAAA,EAAD,UACE,cAAC,KAAD,CAAcqE,SAAS,eAGzB,cAACtE,EAAA,EAAD,CAAYV,GAAI,CAAE4F,GAAI,KAAOiB,MAAM,iBAAnC,0BAOA2G,GACJ,cAAC,WAAD,UACE,eAACF,GAAA,EAAD,WACE,cAAC5M,EAAA,EAAD,CAAYV,GAAI,CAAEgF,SAAU,IAAM6B,MAAM,iBAAiB1E,cAAY,EAArE,qCAGF,eAACxB,EAAA,EAAD,CAAMC,WAAS,EAACZ,GAAI,CAAE6G,MAAO,gBAA7B,UACE,cAAClG,EAAA,EAAD,CAAMI,MAAI,EAAC8E,GAAI,IAAf,SACE,cAACnF,EAAA,EAAD,CAAYJ,QAAQ,KAAKvE,UAAU,MAAnC,kBAIF,cAAC4E,EAAA,EAAD,UACE,cAAC,KAAD,CAAwBqE,SAAS,eAGnC,cAACtE,EAAA,EAAD,CAAYV,GAAI,CAAE4F,GAAI,KAAOiB,MAAM,iBAAnC,2BAQN,SAAS4G,KACP,MAAwBjS,YAAe,GAAvC,mBAAOyQ,EAAP,KAAayB,EAAb,KAKA,OACE,cAACC,EAAA,EAAD,CAAe5P,MAAOoP,GAAtB,SACE,eAAC7G,EAAA,EAAD,CAAKtG,GAAI,CAAEE,QAAS,QAApB,UACE,cAAC0N,EAAA,EAAD,IACA,eAAC,GAAD,CAAQtN,QAAQ,YAAY2L,KAAMA,EAAlC,UACE,cAAC4B,EAAA,EAAD,CACE7N,GAAI,CACFE,QAAS,OACT4N,WAAY,SACZC,eAAgB,WAChBC,GAAI,CAAC,IALT,SAQE,cAACC,EAAA,EAAD,CACEC,QAlBS,WACnBR,GAASzB,IAkBCjM,GAAI,CACFmO,YAAa,QAHjB,SAKE,cAAC,IAAD,QAGJ,cAAC1D,EAAA,EAAD,IACA,cAACvO,EAAD,IACA,cAACuO,EAAA,EAAD,OAEF,eAACnE,EAAA,EAAD,CACEvK,UAAU,OACViE,GAAI,CACFoO,gBAAiB,UACjBC,SAAU,EACVjR,OAAQ,QACRkR,SAAU,QANd,UASE,sBAAKnR,MAAO,CAACE,SAAU,YAAvB,UACE,qBAAKkR,IAAKC,GAAerR,MAAO,CAACV,MAAO,OAAQW,OAAQ,UACxD,sBAAKD,MAAO,CAACE,SAAU,WAAYoH,IAAI,OAAQC,KAAK,QAApD,UACE,qBAAK6J,IAAKE,KACV,cAACnI,EAAA,EAAD,CAAKtG,GAAI,CAAEkJ,SAAU,IAAK7L,SAAU,WAAYqH,KAAK,QAASC,OAAQ,SAAtE,SACE,cAAC+J,GAAA,EAAD,CAAMpO,QAAQ,WAAd,SAA0B+M,OAE5B,cAAC/G,EAAA,EAAD,CAAKtG,GAAI,CAAEkJ,SAAU,IAAK7L,SAAU,WAAYqH,KAAK,SAAUC,OAAO,SAAtE,SACE,cAAC+J,GAAA,EAAD,CAAMpO,QAAQ,WAAd,SAA0BiN,OAE5B,cAACjH,EAAA,EAAD,CAAKtG,GAAI,CAAEkJ,SAAU,IAAK7L,SAAU,WAAYqH,KAAK,SAAUC,OAAO,SAAtE,SACE,cAAC+J,GAAA,EAAD,CAAMpO,QAAQ,WAAd,SAA0BkN,aAIhC,cAACK,EAAA,EAAD,IACA,eAACpI,EAAA,EAAD,CAAWC,SAAS,KAAK1F,GAAI,CAAE2F,GAAI,EAAGC,GAAI,GAA1C,UAEE,cAAC,GAAD,IAEA,cAAC8F,GAAD,CAAW1L,GAAI,CAAE2O,GAAI,gBAQlB,SAASC,KACtB,OAAO,cAACnB,GAAD,IClOMoB,OARf,WACE,OACE,cAAC,IAAD,UACE,cAAC,GAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.6cd00662.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@mui/material/List';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Paper from '@mui/material/Paper';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport InboxIcon from '@mui/icons-material/Inbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link as RouterLink, Route, MemoryRouter } from 'react-router-dom';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport InsertChartIcon from '@mui/icons-material/InsertChart';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n      }),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ListItems(props) {\r\n  console.log(props);\r\n  // const { pathname } = props.location;\r\n  return (\r\n    <>\r\n          <List aria-label=\"link pages\">\r\n            <ListItemLink to=\"home\" primary=\"Home\" icon={<DashboardIcon />} />\r\n            <ListItemLink to=\"inputData\" primary=\"Novo modelo de previsões\" icon={<AddCircleOutlineIcon />} />\r\n            <ListItemLink to=\"modeling\" primary=\"Visualizar previsões\" icon={<InsertChartIcon />} />\r\n            <ListItemLink to=\"report\" primary=\"Criar Relatório\" icon={<DescriptionIcon />} />\r\n          </List>\r\n     </>\r\n  );\r\n}","import React from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { Pagination } from '@mui/material';\r\n\r\n\r\nconst columns = [\r\n    { field: 'id', headerName: 'ID', width: 70 },\r\n    { field: 'data', headerName: 'Data Abertura', type: 'date', description: 'Data de abertura da solicitação de modelo', width: 180 },\r\n    { field: 'entrega', headerName: 'Entrega Prevista', description: 'Entrega prevista do modelo', width: 180 },\r\n    { field: 'descricao', headerName: 'Descrição', description: 'Descrição do modelo proposto', width: 300, },\r\n    { field: 'status', headerName: 'Status', description: 'Status do processo', width: 160, },\r\n  ];\r\n  \r\n  const rows = [\r\n    { id: 2, entrega: '15.02.2022', data: '15.12.2021', descricao: 'Descrição para o processo', status: 'Aberto'},\r\n    { id: 1, entrega: '15.02.2022', data: '15.12.2021', descricao: 'Descrição para o processo', status: 'Em Andamento'},\r\n    { id: 3, entrega: '15.02.2022', data: '15.12.2021', descricao: 'Descrição para o processo', status: 'Finalizado'},\r\n    { id: 4, entrega: '15.02.2022', data: '15.12.2021', descricao: 'Descrição para o processo', status: 'Aberto'},\r\n    { id: 5, entrega: '15.02.2022', data: '15.12.2021', descricao: 'Descrição para o processo', status: 'Em Andamento'},\r\n    { id: 6, entrega: '15.02.2022', data: '16.12.2021', descricao: 'Descrição para o processo', status: 'Aberto'},\r\n    { id: 7, entrega: '15.02.2022', data: '16.12.2021', descricao: 'Descrição para o processo', status: 'Aberto'},\r\n    { id: 8, entrega: '15.02.2022', data: '17.12.2021', descricao: 'Descrição para o processo', status: 'Em Andamento'},\r\n    { id: 9, entrega: '15.02.2022', data: '17.12.2021', descricao: 'Descrição para o processo', status: 'Finalizado'},\r\n  ];\r\n\r\nexport default function Home(){\r\n    return (\r\n        <div style={{ \r\n          height: '680px',          \r\n          position:'relative',\r\n          background: '#FFFFFF',\r\n          borderRadius: '0.8rem',               \r\n          marginTop: '-12rem',\r\n          padding: '0.1rem 2rem 7rem 2rem',\r\n          }}>\r\n        <h2>Análises</h2>\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          pageSize={8}\r\n          rowsPerPageOptions={[5]}\r\n          checkboxSelection\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\n","import * as React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { Button, Slider, Select, MenuItem, FormControl, InputLabel, TextField, Typography, Paper, Container, Grid } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\n\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport DropDown from './DropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelSliders: {\r\n        marginTop: \"15px\",\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    sliders: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    button: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    datePicker: {\r\n        marginTop: \"15px\",\r\n        alignSelf: \"center\",\r\n        // width: \"300px\"\r\n    },\r\n    datePickerTypo: {\r\n        marginLeft: \"10px\",\r\n        marginTop: \"15px\",\r\n    }\r\n}));\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n// const preProcessing = [\r\n//     'Nenhum',\r\n//     'Normalização',\r\n// ]\r\n\r\nconst models = [\r\n    'Todos',\r\n    'Auto-Arima',\r\n    'Amortecimento Exponencial',\r\n    'Prophet'\r\n]\r\n\r\nconst reconciliation = [\r\n    'Todos',\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nfunction ActionsContent() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const [valuePercent, setValuePercent] = React.useState(80);\r\n    const [valueForecast, setValueForecast] = React.useState(28);\r\n    const [processing, setProcessing] = React.useState('');\r\n\r\n    // const [value, setValue] = React.useState([2011, 2012]);\r\n    // const handleChange = (event, newValue) => {\r\n    //     setValue(newValue);\r\n    //     console.log(newValue);\r\n    // };\r\n\r\n    const [valueBegin, setValueBegin] = React.useState(new Date('2010-01-02'));\r\n    const [valueEnd, setValueEnd] = React.useState(new Date('2010-01-02'));\r\n\r\n    const handleChangePercent = (event, newValue) => {\r\n        setValuePercent(newValue)\r\n    };\r\n\r\n    const handleChangeForecast = (event, newValue) => {\r\n        setValueForecast(newValue)\r\n    };\r\n\r\n    const handleChangeProcessing = (event) => {\r\n        setProcessing(event.target.value);\r\n    };\r\n    const [reconciliationOptions, setReconciliationOptions] = React.useState([]);\r\n\r\n    const handleChangeReconciliation = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setReconciliationOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [modelOptions, setModelOptions] = React.useState([]);\r\n\r\n    const handleChangeModel = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setModelOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    const [preProcessingOptions, setPreProcessingOptions] = React.useState([]);\r\n\r\n    const handleChangePreProcessing = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setPreProcessingOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}\r\n            elevation={4}\r\n        >\r\n            <Button variant=\"outlined\" size=\"small\" startIcon={<FileDownloadIcon />} className={classes.button} >\r\n                Importação dos dados\r\n            </Button>\r\n\r\n            <Typography className={classes.datePickerTypo}>Recorte de dados temporais</Typography>\r\n            <Grid container lg={12} flexDirection={\"row\"} spacing={1}>\r\n                <Grid item lg={6}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptBR} utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            label=\"Início\"\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            minDate={new Date('2010-01-02')}\r\n                            maxDate={new Date('2017-12-31')}\r\n                            mask={'__/__/____'}\r\n                            value={valueBegin}\r\n                            onChange={(newValue) => {\r\n                                setValueBegin(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} className={classes.datePicker} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Grid>\r\n                <Grid item lg={6}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptBR} utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            label=\"Fim\"\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            minDate={new Date('2010-01-02')}\r\n                            maxDate={new Date('2017-12-31')}\r\n                            mask={'__/__/____'}\r\n                            value={valueEnd}\r\n                            onChange={(newValue) => {\r\n                                setValueEnd(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} className={classes.datePicker} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Grid>\r\n            </Grid>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Percentual de Treinamento: {valuePercent + \"%\"}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Train percent'}\r\n                value={valuePercent}\r\n                onChange={handleChangePercent}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                // step={10}\r\n                size=\"small\"\r\n            // marks\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n            {/* <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Pré-processamento de dados</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={preProcessingOptions}\r\n                    onChange={handleChangePreProcessing}\r\n                    input={<OutlinedInput label=\"Pré-processamento de dados\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {preProcessing.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={preProcessingOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl> */}\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-simple-select-label\">Pré-processamento de dados</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={processing}\r\n                    label=\"Pré-processamento de dados\"\r\n                    onChange={handleChangeProcessing}\r\n                >\r\n                    <MenuItem value={10}>Nenhum</MenuItem>\r\n                    <MenuItem value={20}>Normalização</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Seleção de modelos</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={modelOptions}\r\n                    onChange={handleChangeModel}\r\n                    input={<OutlinedInput label=\"Seleção de modelos\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {models.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={modelOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Técnicas de reconciliação</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={reconciliationOptions}\r\n                    onChange={handleChangeReconciliation}\r\n                    input={<OutlinedInput label=\"Técnicas de reconciliação\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {reconciliation.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={reconciliationOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Números de dias para previsão: {valueForecast}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Forecast days'}\r\n                value={valueForecast}\r\n                onChange={handleChangeForecast}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                step={1}\r\n                size=\"small\"\r\n                marks\r\n                min={1}\r\n                max={28}\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function Actions() {\r\n    return <ActionsContent />;\r\n}","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n//import data from './data/states_hierarchy.json'\r\n//import data from './data/states.json'\r\n// import data from './data/walmart.json'\r\nimport data from './data/hierarquia_nova.json'\r\n\r\nclass TreeChart extends Component {\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    tooltip: {\r\n                        trigger: [data].name,\r\n                        formatter: function (params) {\r\n                            if (params.data.nomes.length == 1) {\r\n                              return `<b>${params.data.nomes[0]}</b>: ${params.data.value[0]}`;\r\n                            } else if (params.data.nomes.length == 2) {\r\n                              return `<b>${params.data.nomes[0]}</b>: ${params.data.value[0]}</br>\r\n                                   <b>${params.data.nomes[1]}</b>: ${params.data.value[1]}`;\r\n                            } else if (params.data.nomes.length == 3) {\r\n                              return `<b>${params.data.nomes[0]}</b>: ${params.data.value[0]}</br>\r\n                                   <b>${params.data.nomes[1]}</b>: ${params.data.value[1]}</br>\r\n                                   <b>${params.data.nomes[2]}</b>: ${params.data.value[2]}</br>`;\r\n                            } else if (params.data.nomes.length == 4) {\r\n                              return `<b>${params.data.nomes[0]}</b>: ${params.data.value[0]}</br>\r\n                                   <b>${params.data.nomes[1]}</b>: ${params.data.value[1]}</br>\r\n                                   <b>${params.data.nomes[2]}</b>: ${params.data.value[2]}</br>\r\n                                   <b>${params.data.nomes[3]}</b>: ${params.data.value[3]}</br>`;\r\n                            }\r\n                              else {\r\n                              return `<b>${params.data.nomes[0]}</b>: ${params.data.value[0]}</br>\r\n                                   <b>${params.data.nomes[1]}</b>: ${params.data.value[1]}</br>\r\n                                   <b>${params.data.nomes[2]}</b>: ${params.data.value[2]}</br>\r\n                                   <b>${params.data.nomes[3]}</b>: ${params.data.value[3]}</br>\r\n                                   <b>${params.data.nomes[4]}</b>: ${params.data.value[4]}</br>`;\r\n                            }\r\n                          }\r\n                        // triggerOn: 'mousemove'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: 'tree',\r\n                            data: [data],\r\n                            top: '1%',\r\n                            left: '7%',\r\n                            bottom: '1%',\r\n                            right: '20%',\r\n                            symbolSize: 7,\r\n                            label: {\r\n                                position: 'left',\r\n                                verticalAlign: 'middle',\r\n                                align: 'right',\r\n                                fontSize: 9\r\n                            },\r\n                            leaves: {\r\n                                label: {\r\n                                    position: 'right',\r\n                                    verticalAlign: 'middle',\r\n                                    align: 'left'\r\n                                }\r\n                            },\r\n                            emphasis: {\r\n                                focus: 'descendant'\r\n                            },\r\n                            expandAndCollapse: true,\r\n                            animationDuration: 550,\r\n                            animationDurationUpdate: 750\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default TreeChart;","import * as React from 'react';\r\nimport { Container, Grid, Paper, Button } from '@mui/material';\r\nimport Actions from '../components/Actions';\r\nimport TreeChart from '../components/TreeChart';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function InputData() {\r\n  return (\r\n    <Container id=\"inputData\" maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={5} lg={4}>\r\n          <Actions />\r\n        </Grid>\r\n        <Grid item xs={12} md={7} lg={8} alignSelf=\"center\">\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: 440,\r\n              }}\r\n              elevation= {4}\r\n            >\r\n              <TreeChart />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid container item xs={12} style={{ marginTop: \"15px\" }}>\r\n            <Grid container item xs={6} spacing={3}>\r\n              <Grid item xs={12} md={6} lg={6}>\r\n                <Button variant=\"contained\" startIcon={<FileDownloadIcon />}>\r\n                  Carregar\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6}>\r\n                <Button variant=\"contained\" startIcon={<SaveIcon />}>\r\n                  Salvar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ textAlign: \"end\" }}>\r\n              <Link to=\"/modeling\" style={{textDecoration: \"none\"}}>\r\n              <Button variant=\"contained\" startIcon={<ArrowRightIcon />} >\r\n                Executar\r\n              </Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Recent Deposits */}\r\n        {/* <Grid item xs={12} md={4} lg={3}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <Deposits />\r\n                </Paper>\r\n              </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <LineChart />\r\n                </Paper>\r\n              </Grid> */}\r\n        {/* Recent Orders */}\r\n        {/* <Grid item xs={12}>\r\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                  <Orders />\r\n                </Paper>\r\n              </Grid> */}\r\n      </Grid>\r\n    </Container>\r\n  )\r\n};","import * as React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { Button, Select, MenuItem, FormControl, InputLabel, Typography, Paper, Grid, Box, FormControlLabel, Zoom, TextField } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport TreeChart from './TreeChart';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    treeChart: {\r\n        marginTop: \"15px\",\r\n        marginLeft: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst models = [\r\n    'Todos',\r\n    'Auto-Arima',\r\n    'Amortecimento Exponencial',\r\n    'Prophet'\r\n]\r\n\r\nconst reconciliation = [\r\n    'Todos',\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nfunction ActionsModelingContent() {\r\n    const classes = useStyles();\r\n\r\n    const [reconciliationOptions, setReconciliationOptions] = React.useState([]);\r\n\r\n    const handleChangeReconciliation = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setReconciliationOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [modelOptions, setModelOptions] = React.useState([]);\r\n\r\n    const handleChangeModel = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setModelOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [onclick, setOnclick] = React.useState(false);\r\n\r\n    const handleChange = () => {\r\n        console.log(\"Aqui\");\r\n        setOnclick((prev) => !prev);\r\n        const height = this.imgRef.current.clientHeight\r\n        const width = this.imgRef.current.clientWidth\r\n        console.log(height);\r\n\r\n        // Increase dimension(Zooming)\r\n        this.setState({\r\n            height: height + 10,\r\n            width: width + 10,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}\r\n            elevation={4}\r\n        >\r\n            {/* <Button variant=\"outlined\" size=\"small\" className={classes.button} >\r\n                Importação dos dados\r\n            </Button> */}\r\n            <TextField sx={{ m: 1, width: 300 }}\r\n                disabled\r\n                id=\"filled-disabled\"\r\n                label=\"Importação dos dados\"\r\n                defaultValue=\"Arquivo.json\"\r\n                variant=\"filled\"\r\n            />\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Seleção de modelos</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={modelOptions}\r\n                    onChange={handleChangeModel}\r\n                    input={<OutlinedInput label=\"Seleção de modelos\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {models.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={modelOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Técnicas de reconciliação</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={reconciliationOptions}\r\n                    onChange={handleChangeReconciliation}\r\n                    input={<OutlinedInput label=\"Técnicas de reconciliação\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {reconciliation.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={reconciliationOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <Grid item className={classes.treeChart}>\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <Typography>Análise da Hierarquia</Typography>\r\n                    {/* <FormControlLabel\r\n                        control={<ZoomOutMapIcon onClick={handleChange} />}\r\n                        label=\"\"\r\n                    /> */}\r\n                </Box>\r\n                <Zoom in={onclick}>\r\n                    <TreeChart />\r\n                </Zoom>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function ActionsModeling() {\r\n    return <ActionsModelingContent />;\r\n}","import React from 'react';\r\nimport { Container, Grid, Paper, Typography, Button } from '@mui/material';\r\nimport ActionsModeling from '../components/ActionsModeling';\r\nimport TreeChart from '../components/TreeChart';\r\n\r\nexport default function Modeling() {\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={5} lg={4}>\r\n                    <ActionsModeling />\r\n                </Grid>\r\n                <Grid item xs={12} md={7} lg={8}>\r\n                    <Paper\r\n                        sx={{\r\n                            p: 2,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                        elevation= {4}\r\n                    >\r\n                        <Grid item xs={8} md={4} lg={4}>\r\n                            <Typography>Métricas de Avaliação</Typography>\r\n                        </Grid>\r\n                        {/* <Grid item xs={4} md={3} lg={4}>\r\n                            <Button variant=\"outlined\" size=\"small\" padding=\"10px\">\r\n                                Ver modelos ajustados\r\n                            </Button>\r\n                        </Grid> */}\r\n                    </Paper> \r\n                    </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport data_x from './data/data_x.json'\r\n\r\nclass LineChart extends Component {\r\n    render() {\r\n        const colors = ['#5470C6', '#EE6666'];\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    color: colors,\r\n                    tooltip: {\r\n                        trigger: 'none',\r\n                        axisPointer: {\r\n                            type: 'cross'\r\n                        }\r\n                    },\r\n                    legend: {top: 'bottom'},\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                      },\r\n                    \r\n                    toolbox: {\r\n                        left: 'right',\r\n                        itemSize: 15,\r\n                        top: 10,\r\n                        feature: {\r\n                          dataZoom: {\r\n                            yAxisIndex: 'none'\r\n                          },\r\n                          restore: {}\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        top: 70,\r\n                        bottom: 50\r\n                    },\r\n                    xAxis: [\r\n                        {\r\n                            type: 'category',\r\n                            axisTick: {\r\n                                alignWithLabel: true\r\n                            },\r\n                            axisLine: {\r\n                                onZero: false,\r\n                                lineStyle: {\r\n                                    color: colors[1]\r\n                                }\r\n                            },\r\n                            axisPointer: {\r\n                                label: {\r\n                                    formatter: function (params) {\r\n                                        return (\r\n                                            'Precipitation  ' +\r\n                                            params.value +\r\n                                            (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                            data: data_x.datax1 //['2016-1', '2016-2', '2016-3', '2016-4', '2016-5', '2016-6', '2016-7', '2016-8', '2016-9', '2016-10', '2016-11', '2016-12']\r\n                        },\r\n                        {\r\n                            type: 'category',\r\n                            axisTick: {\r\n                                alignWithLabel: true\r\n                            },\r\n                            axisLine: {\r\n                                onZero: false,\r\n                                lineStyle: {\r\n                                    color: colors[0]\r\n                                }\r\n                            },\r\n                            axisPointer: {\r\n                                label: {\r\n                                    formatter: function (params) {\r\n                                        return (\r\n                                            'Precipitation  ' +\r\n                                            params.value +\r\n                                            (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                            data: data_x.datax2//['2015-1', '2015-2', '2015-3', '2015-4', '2015-5', '2015-6', '2015-7', '2015-8', '2015-9', '2015-10', '2015-11', '2015-12']\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            type: 'value'\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: 'Histórico',\r\n                            type: 'line',\r\n                            xAxisIndex: 1,\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: data_x.datay1//[ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3 ]\r\n                        },\r\n                        {\r\n                            name: 'Modelo X',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: data_x.datay2//[3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default LineChart;","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\nimport data_x from './data/data_x.json'\r\n\r\nclass LineChart2 extends Component {\r\n    render() {\r\n        const colors = ['#5470C6', '#EE6666','#07ffe2'];\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    color: colors,\r\n                    // tooltip: {\r\n                    //     trigger: 'none',\r\n                    //     axisPointer: {\r\n                    //         type: 'cross'\r\n                    //     }\r\n                    // },\r\n                    title: {\r\n                        left: 'left',\r\n                        text: 'Predições loja CA_1' //titulo\r\n                    },\r\n                    legend: {\r\n                        orient: 'vertical',\r\n                        right: 10,\r\n                        top: 50//'top'\r\n                    },\r\n                    tooltip: {\r\n                        trigger: 'axis'\r\n                      },\r\n                    \r\n                    toolbox: {\r\n                        left: 'center',\r\n                        itemSize: 15,\r\n                        top: 20,\r\n                        feature: {\r\n                          dataZoom: {\r\n                            yAxisIndex: 'none'\r\n                          },\r\n                          restore: {}\r\n                        }\r\n                    },\r\n                    grid: {\r\n                        top: 50,\r\n                        bottom: 50\r\n                    },\r\n                    xAxis: //[\r\n                        {\r\n                            type: 'category',\r\n                            //axisTick: {\r\n                            //    alignWithLabel: true\r\n                            //},\r\n                            //axisLine: {\r\n                            //   onZero: false//,\r\n                                //lineStyle: {\r\n                                 //   color: colors[0]\r\n                                //}\r\n                            //},\r\n                            // axisPointer: {\r\n                            //     label: {\r\n                            //         formatter: function (params) {\r\n                            //             return (\r\n                            //                 //'Precipitation  ' +\r\n                            //                 params.value +\r\n                            //                 (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                            //             );\r\n                            //         }\r\n                            //     }\r\n                            // },\r\n                            data: data_x.datax1 //['2016-1', '2016-2', '2016-3', '2016-4', '2016-5', '2016-6', '2016-7', '2016-8', '2016-9', '2016-10', '2016-11', '2016-12']\r\n                        },\r\n                        // {\r\n                        //     type: 'category',\r\n                        //     axisTick: {\r\n                        //         alignWithLabel: true\r\n                        //     },\r\n                        //     axisLine: {\r\n                        //         onZero: false,\r\n                        //         lineStyle: {\r\n                        //             color: colors[0]\r\n                        //         }\r\n                        //     },\r\n                        //     axisPointer: {\r\n                        //         label: {\r\n                        //             formatter: function (params) {\r\n                        //                 return (\r\n                        //                     'Precipitation  ' +\r\n                        //                     params.value +\r\n                        //                     (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                        //                 );\r\n                        //             }\r\n                        //         }\r\n                        //     },\r\n                        //     data: data_x.datax2//['2015-1', '2015-2', '2015-3', '2015-4', '2015-5', '2015-6', '2015-7', '2015-8', '2015-9', '2015-10', '2015-11', '2015-12']\r\n                        // }\r\n                    //],\r\n                    yAxis: [\r\n                        {\r\n                            type: 'value'\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: 'Histórico2',\r\n                            type: 'line',\r\n                            //xAxisIndex: 1,\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: data_x.datay1//[ 2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3 ]\r\n                        },\r\n                        {\r\n                            name: 'Modelo Y',\r\n                            type: 'line',\r\n                            lineStyle: {\r\n                                type: 'dashed'\r\n                            },\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: data_x.datay2//[3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\r\n                        },\r\n                        {\r\n                            name: 'Modelo Z',\r\n                            type: 'line',\r\n                            lineStyle: {\r\n                                type: 'dashed'\r\n                            },\r\n                            linestyle: {\r\n                                type: 'dashed'\r\n                            },\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            //color: colors[2],\r\n                            data: data_x.datay3//[3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7]\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default LineChart2;","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass BarChart extends Component {\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    title: {\r\n                        text: 'RMSE Loss vs Model'\r\n                      },\r\n                    xAxis: [{\r\n                        type: 'category',\r\n                        data: ['Prophet', 'Auto-Arima',  'A. Exponencial' ],\r\n                        name: 'Modelo',\r\n                        nameLocation: 'middle',\r\n                        nameGap: 50\r\n                      }],\r\n                      yAxis: [{\r\n                        type: 'value',\r\n                        name: 'RMSE',\r\n                        nameLocation: 'middle',\r\n                        nameGap: 50\r\n                      }],\r\n                    \r\n                      series: [\r\n                        {\r\n                          data: [120, 80, 150],\r\n                          type: 'bar',\r\n                          showBackground: true,\r\n                          backgroundStyle: {\r\n                            color: 'rgba(180, 180, 180, 0.2)'\r\n                          }\r\n                        }\r\n                      ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, { useState } from 'react';\r\nimport {\r\n    Grid, Paper, Radio, Typography, FormControl, FormControlLabel, FormLabel, RadioGroup,\r\n    TableBody, TableRow, TableCell, TableContainer, Table, TableHead, Divider, Button, Container\r\n} from '@mui/material';\r\nimport TreeChart from '../components/TreeChart';\r\nimport LineChart from '../components/LineChart';\r\nimport LineChart2 from '../components/LineChart2';\r\nimport BarChart from '../components/BarChart';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\n\r\nconst reconciliation = [\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nconst errorMetrics = [\r\n    'RMSE',\r\n    'MAPE',\r\n];\r\n\r\nconst columns = [\r\n    { id: 'modelo', label: 'Modelo', minWidth: 170 },\r\n    { id: 'tecnica', label: 'Técnica', minWidth: 100 },\r\n    {\r\n        id: 'recorte',\r\n        label: 'Recorte Temporal',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'treinamento',\r\n        label: '% Treinamento',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'processamento',\r\n        label: 'Pré-processamento',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'previsao',\r\n        label: 'Dias Previsão',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'rmse',\r\n        label: 'RMSE',\r\n        // minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'mape',\r\n        label: 'MAPE',\r\n        // minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n];\r\n\r\nfunction createData(modelo, tecnica, recorte, treinamento, processamento, previsao, rmse, mape) {\r\n    // const density = population / size;\r\n    return { modelo, tecnica, recorte, treinamento, processamento, previsao, rmse, mape };\r\n}\r\n\r\nconst rows = [\r\n    createData('Auto-Arima', 'FP', '03/2017 - 09/2018', '70%', 'Normalização', 28, 0.96, 0.96),\r\n    createData('Amortecimento', 'SWLS', '03/2017 - 09/2018', '82%', '-', 15, 0.89, 0.89),\r\n    createData('Amortecimento', 'FP', '03/2017 - 09/2018', '65%', '-', 5, 0.96, 0.96),\r\n];\r\n\r\nexport default function Report() {\r\n    const [valueReconciliation, setValueReconciliation] = useState(\"Ordinary Least Squares\");\r\n\r\n    const handleChangeReconciliation = (event, valueReconciliation) => {\r\n        setValueReconciliation(valueReconciliation)\r\n    };\r\n\r\n    const [valueErrorMetrics, setValueErrorMetrics] = useState(\"RMSE\");\r\n\r\n    const handleChangeErrorMetrics = (event, valueErrorMetrics) => {\r\n        setValueErrorMetrics(valueErrorMetrics)\r\n    };\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper\r\n                sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n                elevation={4}\r\n            >\r\n                <Typography style={{ marginBottom: \"15px\" }}>Visualização dos ajustes dos modelos com a série original</Typography>\r\n                <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n\r\n                    <Grid item xs={12} md={5} lg={4}>\r\n\r\n                        <Paper\r\n                            sx={{\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                            elevation={4}\r\n                        >\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Técnicas de Reconciliação</FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"técnicas de reconciliação\"\r\n                                    name=\"radio-buttons-group\"\r\n                                    value={valueReconciliation}\r\n                                    onChange={handleChangeReconciliation}\r\n\r\n                                >\r\n                                    {reconciliation.map((name) => (\r\n                                        <FormControlLabel value={name} control={<Radio />} label={name} size=\"small\" />\r\n                                    ))}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <TreeChart />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={7} lg={8}>\r\n                        <Paper\r\n                            sx={{\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                            elevation={4}\r\n                        >\r\n                            \r\n                            <LineChart />\r\n                            <LineChart2 />\r\n                            <LineChart2 />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Paper\r\n                    sx={{\r\n                        p: 2,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginTop: '15px'\r\n                    }}\r\n                    elevation={4}\r\n                >\r\n                    <Typography style={{ marginBottom: \"15px\" }}>Comparação entre métricas e modelos</Typography>\r\n                    <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n                        <Grid item xs={12} md={5} lg={4}>\r\n\r\n                            <Paper\r\n                                sx={{\r\n                                    p: 2,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                }}\r\n                                elevation={4}\r\n                            >\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Métricas de Erro</FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"técnicas de reconciliação\"\r\n                                        name=\"radio-buttons-group\"\r\n                                        value={valueErrorMetrics}\r\n                                        onChange={handleChangeErrorMetrics}\r\n\r\n                                    >\r\n                                        {errorMetrics.map((name) => (\r\n                                            <FormControlLabel value={name} control={<Radio />} label={name} size=\"small\" />\r\n                                        ))}\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={7} lg={8}>\r\n                            <BarChart />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                <Paper\r\n                    sx={{\r\n                        p: 2,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginTop: '15px'\r\n                    }}\r\n                    elevation={4}\r\n                >\r\n                    {/* <Typography style={{ marginBottom: \"15px\" }}>Comparação entre métricas e modelos</Typography> */}\r\n                    <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n                        <Grid item xs={12}>\r\n                            <Typography>Modelos Selecionados</Typography>\r\n                            <Divider />\r\n                            <TableContainer sx={{ maxHeight: 440 }}>\r\n                                <Table stickyHeader aria-label=\"sticky table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {rows\r\n                                            // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((row) => {\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                                        {columns.map((column) => {\r\n                                                            const value = row[column.id];\r\n                                                            return (\r\n                                                                <TableCell key={column.id} align={column.align}>\r\n                                                                    {column.format && typeof value === 'number'\r\n                                                                        ? column.format(value)\r\n                                                                        : value}\r\n                                                                </TableCell>\r\n                                                            );\r\n                                                        })}\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Paper>\r\n            <Grid item xs={12} textAlign={\"end\"} style={{ marginTop: \"15px\" }}>\r\n                <Button variant=\"contained\" startIcon={<ArrowRightIcon />} >\r\n                    Fazer previsão\r\n                </Button>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport InputData from \"./pages/InputData\";\r\nimport Modeling from \"./pages/Modeling\";\r\nimport Report from \"./pages/Report\";\r\n\r\nexport const DashboardPage = '/';\r\n\r\nconst RoutesHtseer = () => {\r\n   return(\r\n       <Routes>\r\n          <Route element={ <Home/>} path = {DashboardPage} />\r\n          <Route element={ <Home/>} path = \"HTSeer\" />\r\n          <Route element = { <Home /> }  path=\"home\" />\r\n          <Route element = { <InputData /> }  path=\"inputData\" />\r\n          <Route element = { <Modeling /> }  path=\"modeling\" />\r\n          <Route element = { <Report /> }  path=\"report\" />\r\n          <Route element = { <h1>Not Found</h1> } path=\"*\" />\r\n       </Routes>\r\n   )\r\n}\r\n\r\nexport default RoutesHtseer;","export default __webpack_public_path__ + \"static/media/BACKGROUND TOPO.6614b5c5.png\";","export default __webpack_public_path__ + \"static/media/LOGO.b6600b30.png\";","import * as React from 'react';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ListItems from \"./ListItems\";\r\nimport RoutesHtseer from '../routes';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport backgroundImg from '../images/BACKGROUND TOPO.png';\r\nimport imgLogo from '../images/LOGO.png';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport AnalyticsIcon from '@mui/icons-material/Analytics';\r\nimport InsightsIcon from '@mui/icons-material/Insights';\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport Grid from '@mui/material/Grid';\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    '& .MuiDrawer-paper': {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: 'border-box',\r\n      ...(!open && {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n  }),\r\n);\r\n\r\nconst mdTheme = createTheme();\r\n\r\nconst bull = (\r\n  <Box\r\n    component=\"span\"\r\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\r\n  >\r\n    •\r\n  </Box>\r\n);\r\n\r\nconst cardAnalisesAbertas = (\r\n  <React.Fragment>\r\n    <CardContent>\r\n      <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n        Análises em Aberto\r\n      </Typography>\r\n    <Grid container sx={{ color: 'text.primary' }}>\r\n      <Grid item xs={9.6}>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        234\r\n        </Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <AnalyticsIcon fontSize=\"large\"/>\r\n      </Grid>\r\n    </Grid>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        25 Lojas\r\n      </Typography>\r\n  \r\n    </CardContent>\r\n  </React.Fragment>\r\n);\r\nconst cardAnalisesAndamento = (\r\n  <React.Fragment>\r\n    <CardContent>\r\n      <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n        Análises em Andamento\r\n      </Typography>\r\n    <Grid container sx={{ color: 'text.primary' }}>\r\n      <Grid item xs={9.6}>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        120\r\n        </Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <InsightsIcon fontSize=\"large\"/>\r\n      </Grid>\r\n    </Grid>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        5 Lojas\r\n      </Typography>\r\n  \r\n    </CardContent>\r\n  </React.Fragment>\r\n);\r\nconst cardAnalisesFinalizadas = (\r\n  <React.Fragment>\r\n    <CardContent>\r\n      <Typography sx={{ fontSize: 16 }} color=\"text.secondary\" gutterBottom>\r\n        Análises Finalizadas\r\n      </Typography>\r\n    <Grid container sx={{ color: 'text.primary' }}>\r\n      <Grid item xs={9.6}>\r\n        <Typography variant=\"h5\" component=\"div\">\r\n        15\r\n        </Typography>\r\n      </Grid>\r\n      <Grid>\r\n        <CheckCircleOutlineIcon fontSize=\"large\" />\r\n      </Grid>\r\n    </Grid>\r\n      <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n        15 Lojas\r\n      </Typography>\r\n  \r\n    </CardContent>\r\n  </React.Fragment>\r\n);\r\n\r\nfunction DashboardContent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <Drawer variant=\"permanent\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              px: [1],\r\n            }}\r\n          >\r\n            <IconButton \r\n              onClick={toggleDrawer}\r\n              sx={{\r\n                marginRight: '14px'\r\n              }}>\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Divider />\r\n          <ListItems />\r\n          <Divider />\r\n        </Drawer>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: '#F0F0F7',\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <div style={{position: 'relative'}}>\r\n            <img src={backgroundImg} style={{width: '100%', height: '45vh'}}/>  \r\n            <div style={{position: 'absolute', top:'70px', left:'25px'}}>\r\n              <img src={imgLogo} />\r\n              <Box sx={{ minWidth: 180, position: 'relative', left:'775px', bottom: '150px' }}>\r\n                <Card variant=\"outlined\">{cardAnalisesAbertas}</Card>\r\n              </Box>\r\n              <Box sx={{ minWidth: 180, position: 'relative', left:'1000px', bottom:'300px' }}>\r\n                <Card variant=\"outlined\">{cardAnalisesAndamento}</Card>\r\n              </Box>\r\n              <Box sx={{ minWidth: 180, position: 'relative', left:'1225px', bottom:'450px' }}>\r\n                <Card variant=\"outlined\">{cardAnalisesFinalizadas}</Card>\r\n              </Box>\r\n            </div>\r\n          </div>\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4}}>\r\n            {/* Menu com links para as rotas */}\r\n            <RoutesHtseer />\r\n            {/* Rodapé */}\r\n            <Copyright sx={{ pt: 4 }} />\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default function Dashboard() {\r\n  return <DashboardContent />;\r\n}","import './App.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Dashboard/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}