{"version":3,"sources":["components/ListItems.js","pages/Home.js","components/Actions.js","components/TreeChart.js","pages/InputData.js","components/ActionsModeling.js","pages/Modeling.js","components/LineChart.js","components/BarChart.js","pages/Report.js","routes.js","components/Dashboard.js","App.js","index.js"],"names":["ListItemLink","props","icon","primary","to","renderLink","React","itemProps","ref","role","undefined","ListItem","button","component","ListItemIcon","ListItemText","ListItems","console","log","List","Home","useStyles","makeStyles","theme","labelSliders","marginTop","width","alignSelf","sliders","datePicker","datePickerTypo","marginLeft","valuetext","value","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","models","reconciliation","ActionsContent","classes","valuePercent","setValuePercent","valueForecast","setValueForecast","processing","setProcessing","Date","valueBegin","setValueBegin","valueEnd","setValueEnd","reconciliationOptions","setReconciliationOptions","modelOptions","setModelOptions","Paper","sx","p","display","flexDirection","elevation","Button","variant","size","startIcon","className","Typography","Grid","container","lg","spacing","item","LocalizationProvider","dateAdapter","AdapterDateFns","locale","ptBR","utils","DateFnsUtils","DatePicker","label","openTo","views","minDate","maxDate","mask","onChange","newValue","renderInput","params","TextField","gutterBottom","Slider","getAriaLabel","event","valueLabelDisplay","getAriaValueText","FormControl","m","InputLabel","id","Select","labelId","target","MenuItem","multiple","split","input","OutlinedInput","renderValue","selected","join","map","name","Checkbox","checked","indexOf","step","marks","min","max","Actions","TreeChart","option","tooltip","trigger","triggerOn","series","type","data","top","left","bottom","right","symbolSize","position","verticalAlign","align","fontSize","leaves","emphasis","focus","expandAndCollapse","animationDuration","animationDurationUpdate","Component","InputData","Container","maxWidth","mt","mb","xs","md","height","textAlign","textDecoration","treeChart","ActionsModelingContent","onclick","disabled","defaultValue","Box","Zoom","in","ActionsModeling","Modeling","LineChart","colors","color","axisPointer","legend","grid","xAxis","axisTick","alignWithLabel","axisLine","onZero","lineStyle","formatter","seriesData","length","yAxis","xAxisIndex","smooth","BarChart","title","text","nameLocation","nameGap","showBackground","backgroundStyle","errorMetrics","columns","minWidth","createData","modelo","tecnica","recorte","treinamento","processamento","previsao","rmse","mape","rows","Report","useState","valueReconciliation","setValueReconciliation","valueErrorMetrics","setValueErrorMetrics","marginBottom","direction","FormLabel","RadioGroup","FormControlLabel","control","Radio","Divider","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","row","hover","tabIndex","format","code","RoutesHtseer","element","path","Copyright","href","getFullYear","AppBar","styled","MuiAppBar","shouldForwardProp","prop","open","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","enteringScreen","Drawer","MuiDrawer","whiteSpace","boxSizing","overflowX","breakpoints","up","mdTheme","createTheme","DashboardContent","setOpen","toggleDrawer","ThemeProvider","CssBaseline","Toolbar","pr","IconButton","edge","onClick","marginRight","noWrap","flexGrow","alignItems","justifyContent","px","backgroundColor","palette","mode","grey","overflow","pt","Dashboard","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53cbaed7.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport List from '@mui/material/List';\r\nimport Box from '@mui/material/Box';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport Paper from '@mui/material/Paper';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Divider from '@mui/material/Divider';\r\nimport InboxIcon from '@mui/icons-material/Inbox';\r\nimport DraftsIcon from '@mui/icons-material/Drafts';\r\nimport Typography from '@mui/material/Typography';\r\nimport { Link as RouterLink, Route, MemoryRouter } from 'react-router-dom';\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport InsertChartIcon from '@mui/icons-material/InsertChart';\r\nimport DashboardIcon from '@mui/icons-material/Dashboard';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\n\r\nfunction ListItemLink(props) {\r\n  const { icon, primary, to } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef(function Link(itemProps, ref) {\r\n        return <RouterLink to={to} ref={ref} {...itemProps} role={undefined} />;\r\n      }),\r\n    [to],\r\n  );\r\n\r\n  return (\r\n    <li>\r\n      <ListItem button component={renderLink}>\r\n        {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\r\n        <ListItemText primary={primary} />\r\n      </ListItem>\r\n    </li>\r\n  );\r\n}\r\n\r\nListItemLink.propTypes = {\r\n  icon: PropTypes.element,\r\n  primary: PropTypes.string.isRequired,\r\n  to: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ListItems(props) {\r\n  console.log(props);\r\n  // const { pathname } = props.location;\r\n  return (\r\n    <>\r\n          <List aria-label=\"link pages\">\r\n            <ListItemLink to=\"home\" primary=\"Home\" icon={<DashboardIcon />} />\r\n            <ListItemLink to=\"inputData\" primary=\"Novo modelo de previsões\" icon={<AddCircleOutlineIcon />} />\r\n            <ListItemLink to=\"modeling\" primary=\"Visualizar previsões\" icon={<InsertChartIcon />} />\r\n            <ListItemLink to=\"report\" primary=\"Criar Relatório\" icon={<DescriptionIcon />} />\r\n          </List>\r\n     </>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function Home(){\r\n    return (\r\n        <h1>Home em construção</h1>\r\n    )\r\n}\r\n\r\n","import * as React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { Button, Slider, Select, MenuItem, FormControl, InputLabel, TextField, Typography, Paper, Container, Grid } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport DatePicker from '@mui/lab/DatePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { ptBR } from \"date-fns/locale\";\r\n\r\n\r\nimport ListItemText from '@mui/material/ListItemText';\r\n\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport DropDown from './DropDown';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    labelSliders: {\r\n        marginTop: \"15px\",\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    sliders: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    button: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    datePicker: {\r\n        marginTop: \"15px\",\r\n        alignSelf: \"center\",\r\n        // width: \"300px\"\r\n    },\r\n    datePickerTypo: {\r\n        marginLeft: \"10px\",\r\n        marginTop: \"15px\",\r\n    }\r\n}));\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n// const preProcessing = [\r\n//     'Nenhum',\r\n//     'Normalização',\r\n// ]\r\n\r\nconst models = [\r\n    'Todos',\r\n    'Auto-Arima',\r\n    'Amortecimento Exponencial',\r\n    'Prophet'\r\n]\r\n\r\nconst reconciliation = [\r\n    'Todos',\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nfunction ActionsContent() {\r\n    const classes = useStyles();\r\n\r\n\r\n    const [valuePercent, setValuePercent] = React.useState(80);\r\n    const [valueForecast, setValueForecast] = React.useState(28);\r\n    const [processing, setProcessing] = React.useState('');\r\n\r\n    // const [value, setValue] = React.useState([2011, 2012]);\r\n    // const handleChange = (event, newValue) => {\r\n    //     setValue(newValue);\r\n    //     console.log(newValue);\r\n    // };\r\n\r\n    const [valueBegin, setValueBegin] = React.useState(new Date('2010-01-02'));\r\n    const [valueEnd, setValueEnd] = React.useState(new Date('2010-01-02'));\r\n\r\n    const handleChangePercent = (event, newValue) => {\r\n        setValuePercent(newValue)\r\n    };\r\n\r\n    const handleChangeForecast = (event, newValue) => {\r\n        setValueForecast(newValue)\r\n    };\r\n\r\n    const handleChangeProcessing = (event) => {\r\n        setProcessing(event.target.value);\r\n    };\r\n    const [reconciliationOptions, setReconciliationOptions] = React.useState([]);\r\n\r\n    const handleChangeReconciliation = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setReconciliationOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [modelOptions, setModelOptions] = React.useState([]);\r\n\r\n    const handleChangeModel = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setModelOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    const [preProcessingOptions, setPreProcessingOptions] = React.useState([]);\r\n\r\n    const handleChangePreProcessing = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setPreProcessingOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}\r\n            elevation={4}\r\n        >\r\n            <Button variant=\"outlined\" size=\"small\" startIcon={<FileDownloadIcon />} className={classes.button} >\r\n                Importação dos dados\r\n            </Button>\r\n\r\n            <Typography className={classes.datePickerTypo}>Recorte de dados temporais</Typography>\r\n            <Grid container lg={12} flexDirection={\"row\"} spacing={1}>\r\n                <Grid item lg={6}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptBR} utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            label=\"Início\"\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            minDate={new Date('2010-01-02')}\r\n                            maxDate={new Date('2017-12-31')}\r\n                            mask={'__/__/____'}\r\n                            value={valueBegin}\r\n                            onChange={(newValue) => {\r\n                                setValueBegin(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} className={classes.datePicker} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Grid>\r\n                <Grid item lg={6}>\r\n                    <LocalizationProvider dateAdapter={AdapterDateFns} locale={ptBR} utils={DateFnsUtils}>\r\n                        <DatePicker\r\n                            label=\"Fim\"\r\n                            openTo=\"year\"\r\n                            views={['year', 'month', 'day']}\r\n                            minDate={new Date('2010-01-02')}\r\n                            maxDate={new Date('2017-12-31')}\r\n                            mask={'__/__/____'}\r\n                            value={valueEnd}\r\n                            onChange={(newValue) => {\r\n                                setValueEnd(newValue);\r\n                            }}\r\n                            renderInput={(params) => <TextField {...params} className={classes.datePicker} />}\r\n                        />\r\n                    </LocalizationProvider>\r\n                </Grid>\r\n            </Grid>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Percentual de Treinamento: {valuePercent + \"%\"}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Train percent'}\r\n                value={valuePercent}\r\n                onChange={handleChangePercent}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                // step={10}\r\n                size=\"small\"\r\n            // marks\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n            {/* <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Pré-processamento de dados</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={preProcessingOptions}\r\n                    onChange={handleChangePreProcessing}\r\n                    input={<OutlinedInput label=\"Pré-processamento de dados\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {preProcessing.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={preProcessingOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl> */}\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-simple-select-label\">Pré-processamento de dados</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={processing}\r\n                    label=\"Pré-processamento de dados\"\r\n                    onChange={handleChangeProcessing}\r\n                >\r\n                    <MenuItem value={10}>Nenhum</MenuItem>\r\n                    <MenuItem value={20}>Normalização</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Seleção de modelos</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={modelOptions}\r\n                    onChange={handleChangeModel}\r\n                    input={<OutlinedInput label=\"Seleção de modelos\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {models.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={modelOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Técnicas de reconciliação</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={reconciliationOptions}\r\n                    onChange={handleChangeReconciliation}\r\n                    input={<OutlinedInput label=\"Técnicas de reconciliação\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {reconciliation.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={reconciliationOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <Typography variant=\"subtitle2\" gutterBottom className={classes.labelSliders}>\r\n                Números de dias para previsão: {valueForecast}\r\n            </Typography>\r\n            <Slider\r\n                className={classes.sliders}\r\n                getAriaLabel={() => 'Forecast days'}\r\n                value={valueForecast}\r\n                onChange={handleChangeForecast}\r\n                valueLabelDisplay=\"auto\"\r\n                getAriaValueText={valuetext}\r\n                step={1}\r\n                size=\"small\"\r\n                marks\r\n                min={1}\r\n                max={28}\r\n            // valueLabelDisplay=\"on\"\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function Actions() {\r\n    return <ActionsContent />;\r\n}","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n//import data from './data/states_hierarchy.json'\r\n//import data from './data/states.json'\r\nimport data from './data/walmart.json'\r\n\r\nclass TreeChart extends Component {\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    tooltip: {\r\n                        trigger: 'item',\r\n                        triggerOn: 'mousemove'\r\n                    },\r\n                    series: [\r\n                        {\r\n                            type: 'tree',\r\n                            data: [data],\r\n                            top: '1%',\r\n                            left: '7%',\r\n                            bottom: '1%',\r\n                            right: '20%',\r\n                            symbolSize: 7,\r\n                            label: {\r\n                                position: 'left',\r\n                                verticalAlign: 'middle',\r\n                                align: 'right',\r\n                                fontSize: 9\r\n                            },\r\n                            leaves: {\r\n                                label: {\r\n                                    position: 'right',\r\n                                    verticalAlign: 'middle',\r\n                                    align: 'left'\r\n                                }\r\n                            },\r\n                            emphasis: {\r\n                                focus: 'descendant'\r\n                            },\r\n                            expandAndCollapse: true,\r\n                            animationDuration: 550,\r\n                            animationDurationUpdate: 750\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default TreeChart;","import * as React from 'react';\r\nimport { Container, Grid, Paper, Button } from '@mui/material';\r\nimport Actions from '../components/Actions';\r\nimport TreeChart from '../components/TreeChart';\r\nimport SaveIcon from '@mui/icons-material/Save';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function InputData() {\r\n  return (\r\n    <Container id=\"inputData\" maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={5} lg={4}>\r\n          <Actions />\r\n        </Grid>\r\n        <Grid item xs={12} md={7} lg={8} alignSelf=\"center\">\r\n          <Grid item xs={12}>\r\n            <Paper\r\n              sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                height: 440,\r\n              }}\r\n              elevation= {4}\r\n            >\r\n              <TreeChart />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid container item xs={12} style={{ marginTop: \"15px\" }}>\r\n            <Grid container item xs={6} spacing={3}>\r\n              <Grid item xs={12} md={6} lg={6}>\r\n                <Button variant=\"contained\" startIcon={<FileDownloadIcon />}>\r\n                  Carregar\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={6} lg={6}>\r\n                <Button variant=\"contained\" startIcon={<SaveIcon />}>\r\n                  Salvar\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ textAlign: \"end\" }}>\r\n              <Link to=\"/modeling\" style={{textDecoration: \"none\"}}>\r\n              <Button variant=\"contained\" startIcon={<ArrowRightIcon />} >\r\n                Executar\r\n              </Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Recent Deposits */}\r\n        {/* <Grid item xs={12} md={4} lg={3}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <Deposits />\r\n                </Paper>\r\n              </Grid> */}\r\n        {/* <Grid item xs={12}>\r\n                <Paper\r\n                  sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                    height: 240,\r\n                  }}\r\n                >\r\n                  <LineChart />\r\n                </Paper>\r\n              </Grid> */}\r\n        {/* Recent Orders */}\r\n        {/* <Grid item xs={12}>\r\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\r\n                  <Orders />\r\n                </Paper>\r\n              </Grid> */}\r\n      </Grid>\r\n    </Container>\r\n  )\r\n};","import * as React from 'react';\r\nimport FileDownloadIcon from '@mui/icons-material/FileDownload';\r\nimport { Button, Select, MenuItem, FormControl, InputLabel, Typography, Paper, Grid, Box, FormControlLabel, Zoom, TextField } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport OutlinedInput from '@mui/material/OutlinedInput';\r\nimport TreeChart from './TreeChart';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport ZoomOutMapIcon from '@mui/icons-material/ZoomOutMap';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        width: \"300px\",\r\n        alignSelf: \"center\"\r\n    },\r\n    treeChart: {\r\n        marginTop: \"15px\",\r\n        marginLeft: \"10px\",\r\n    }\r\n}));\r\n\r\n\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\n\r\nconst models = [\r\n    'Todos',\r\n    'Auto-Arima',\r\n    'Amortecimento Exponencial',\r\n    'Prophet'\r\n]\r\n\r\nconst reconciliation = [\r\n    'Todos',\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nfunction ActionsModelingContent() {\r\n    const classes = useStyles();\r\n\r\n    const [reconciliationOptions, setReconciliationOptions] = React.useState([]);\r\n\r\n    const handleChangeReconciliation = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setReconciliationOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [modelOptions, setModelOptions] = React.useState([]);\r\n\r\n    const handleChangeModel = (event) => {\r\n        const {\r\n            target: { value },\r\n        } = event;\r\n        setModelOptions(\r\n            typeof value === 'string' ? value.split(',') : value,\r\n        );\r\n    };\r\n\r\n    const [onclick, setOnclick] = React.useState(false);\r\n\r\n    const handleChange = () => {\r\n        console.log(\"Aqui\");\r\n        setOnclick((prev) => !prev);\r\n        const height = this.imgRef.current.clientHeight\r\n        const width = this.imgRef.current.clientWidth\r\n        console.log(height);\r\n\r\n        // Increase dimension(Zooming)\r\n        this.setState({\r\n            height: height + 10,\r\n            width: width + 10,\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Paper\r\n            sx={{\r\n                p: 2,\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n            }}\r\n            elevation={4}\r\n        >\r\n            {/* <Button variant=\"outlined\" size=\"small\" className={classes.button} >\r\n                Importação dos dados\r\n            </Button> */}\r\n            <TextField sx={{ m: 1, width: 300 }}\r\n                disabled\r\n                id=\"filled-disabled\"\r\n                label=\"Importação dos dados\"\r\n                defaultValue=\"Arquivo.json\"\r\n                variant=\"filled\"\r\n            />\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Seleção de modelos</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={modelOptions}\r\n                    onChange={handleChangeModel}\r\n                    input={<OutlinedInput label=\"Seleção de modelos\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {models.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={modelOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <FormControl sx={{ m: 1, width: 300 }}>\r\n                <InputLabel id=\"demo-multiple-checkbox-label\">Técnicas de reconciliação</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-multiple-checkbox-label\"\r\n                    id=\"demo-multiple-checkbox\"\r\n                    multiple\r\n                    value={reconciliationOptions}\r\n                    onChange={handleChangeReconciliation}\r\n                    input={<OutlinedInput label=\"Técnicas de reconciliação\" />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {reconciliation.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={reconciliationOptions.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n            <Grid item className={classes.treeChart}>\r\n                <Box sx={{ display: 'flex' }}>\r\n                    <Typography>Análise da Hierarquia</Typography>\r\n                    {/* <FormControlLabel\r\n                        control={<ZoomOutMapIcon onClick={handleChange} />}\r\n                        label=\"\"\r\n                    /> */}\r\n                </Box>\r\n                <Zoom in={onclick}>\r\n                    <TreeChart />\r\n                </Zoom>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default function ActionsModeling() {\r\n    return <ActionsModelingContent />;\r\n}","import React from 'react';\r\nimport { Container, Grid, Paper, Typography, Button } from '@mui/material';\r\nimport ActionsModeling from '../components/ActionsModeling';\r\nimport TreeChart from '../components/TreeChart';\r\n\r\nexport default function Modeling() {\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={5} lg={4}>\r\n                    <ActionsModeling />\r\n                </Grid>\r\n                <Grid item xs={12} md={7} lg={8}>\r\n                    <Paper\r\n                        sx={{\r\n                            p: 2,\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                        }}\r\n                        elevation= {4}\r\n                    >\r\n                        <Grid item xs={8} md={4} lg={4}>\r\n                            <Typography>Métricas de Avaliação</Typography>\r\n                        </Grid>\r\n                        {/* <Grid item xs={4} md={3} lg={4}>\r\n                            <Button variant=\"outlined\" size=\"small\" padding=\"10px\">\r\n                                Ver modelos ajustados\r\n                            </Button>\r\n                        </Grid> */}\r\n                    </Paper> \r\n                    </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass LineChart extends Component {\r\n    render() {\r\n        const colors = ['#5470C6', '#EE6666'];\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    color: colors,\r\n                    tooltip: {\r\n                        trigger: 'none',\r\n                        axisPointer: {\r\n                            type: 'cross'\r\n                        }\r\n                    },\r\n                    legend: {},\r\n                    grid: {\r\n                        top: 70,\r\n                        bottom: 50\r\n                    },\r\n                    xAxis: [\r\n                        {\r\n                            type: 'category',\r\n                            axisTick: {\r\n                                alignWithLabel: true\r\n                            },\r\n                            axisLine: {\r\n                                onZero: false,\r\n                                lineStyle: {\r\n                                    color: colors[1]\r\n                                }\r\n                            },\r\n                            axisPointer: {\r\n                                label: {\r\n                                    formatter: function (params) {\r\n                                        return (\r\n                                            'Precipitation  ' +\r\n                                            params.value +\r\n                                            (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                            data: ['2016-1', '2016-2', '2016-3', '2016-4', '2016-5', '2016-6', '2016-7', '2016-8', '2016-9', '2016-10', '2016-11', '2016-12']\r\n                        },\r\n                        {\r\n                            type: 'category',\r\n                            axisTick: {\r\n                                alignWithLabel: true\r\n                            },\r\n                            axisLine: {\r\n                                onZero: false,\r\n                                lineStyle: {\r\n                                    color: colors[0]\r\n                                }\r\n                            },\r\n                            axisPointer: {\r\n                                label: {\r\n                                    formatter: function (params) {\r\n                                        return (\r\n                                            'Precipitation  ' +\r\n                                            params.value +\r\n                                            (params.seriesData.length ? '：' + params.seriesData[0].data : '')\r\n                                        );\r\n                                    }\r\n                                }\r\n                            },\r\n                            data: ['2015-1', '2015-2', '2015-3', '2015-4', '2015-5', '2015-6', '2015-7', '2015-8', '2015-9', '2015-10', '2015-11', '2015-12']\r\n                        }\r\n                    ],\r\n                    yAxis: [\r\n                        {\r\n                            type: 'value'\r\n                        }\r\n                    ],\r\n                    series: [\r\n                        {\r\n                            name: 'Precipitation(2015)',\r\n                            type: 'line',\r\n                            xAxisIndex: 1,\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: [\r\n                                2.6, 5.9, 9.0, 26.4, 28.7, 70.7, 175.6, 182.2, 48.7, 18.8, 6.0, 2.3\r\n                            ]\r\n                        },\r\n                        {\r\n                            name: 'Precipitation(2016)',\r\n                            type: 'line',\r\n                            smooth: true,\r\n                            emphasis: {\r\n                                focus: 'series'\r\n                            },\r\n                            data: [\r\n                                3.9, 5.9, 11.1, 18.7, 48.3, 69.2, 231.6, 46.6, 55.4, 18.4, 10.3, 0.7\r\n                            ]\r\n                        }\r\n                    ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default LineChart;","import React, { Component } from 'react';\r\nimport ReactEcharts from 'echarts-for-react';\r\n\r\nclass BarChart extends Component {\r\n    render() {\r\n        return (\r\n            <ReactEcharts\r\n                option={{\r\n                    title: {\r\n                        text: 'RMSE Loss vs Model'\r\n                      },\r\n                    xAxis: [{\r\n                        type: 'category',\r\n                        data: ['Prophet', 'Auto-Arima',  'A. Exponencial' ],\r\n                        name: 'Modelo',\r\n                        nameLocation: 'middle',\r\n                        nameGap: 50\r\n                      }],\r\n                      yAxis: [{\r\n                        type: 'value',\r\n                        name: 'RMSE',\r\n                        nameLocation: 'middle',\r\n                        nameGap: 50\r\n                      }],\r\n                    \r\n                      series: [\r\n                        {\r\n                          data: [120, 80, 150],\r\n                          type: 'bar',\r\n                          showBackground: true,\r\n                          backgroundStyle: {\r\n                            color: 'rgba(180, 180, 180, 0.2)'\r\n                          }\r\n                        }\r\n                      ]\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React, { useState } from 'react';\r\nimport {\r\n    Grid, Paper, Radio, Typography, FormControl, FormControlLabel, FormLabel, RadioGroup,\r\n    TableBody, TableRow, TableCell, TableContainer, Table, TableHead, Divider, Button, Container\r\n} from '@mui/material';\r\nimport TreeChart from '../components/TreeChart';\r\nimport LineChart from '../components/LineChart';\r\nimport BarChart from '../components/BarChart';\r\nimport ArrowRightIcon from '@mui/icons-material/ArrowRight';\r\n\r\nconst reconciliation = [\r\n    'Ordinary Least Squares',\r\n    'Structurally Weighted Least Squares',\r\n    'Variance Weighted Least Squares',\r\n    'Forcasted Proportions',\r\n    'Proportions of Historical Averages',\r\n    'Average Historical Proportions',\r\n    'Bottom-up',\r\n];\r\n\r\nconst errorMetrics = [\r\n    'RMSE',\r\n    'MAPE',\r\n];\r\n\r\nconst columns = [\r\n    { id: 'modelo', label: 'Modelo', minWidth: 170 },\r\n    { id: 'tecnica', label: 'Técnica', minWidth: 100 },\r\n    {\r\n        id: 'recorte',\r\n        label: 'Recorte Temporal',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'treinamento',\r\n        label: '% Treinamento',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toLocaleString('en-US'),\r\n    },\r\n    {\r\n        id: 'processamento',\r\n        label: 'Pré-processamento',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'previsao',\r\n        label: 'Dias Previsão',\r\n        //   minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'rmse',\r\n        label: 'RMSE',\r\n        // minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n    {\r\n        id: 'mape',\r\n        label: 'MAPE',\r\n        // minWidth: 170,\r\n        align: 'right',\r\n        //   format: (value) => value.toFixed(2),\r\n    },\r\n];\r\n\r\nfunction createData(modelo, tecnica, recorte, treinamento, processamento, previsao, rmse, mape) {\r\n    // const density = population / size;\r\n    return { modelo, tecnica, recorte, treinamento, processamento, previsao, rmse, mape };\r\n}\r\n\r\nconst rows = [\r\n    createData('Auto-Arima', 'FP', '03/2017 - 09/2018', '70%', 'Normalização', 28, 0.96, 0.96),\r\n    createData('Amortecimento', 'SWLS', '03/2017 - 09/2018', '82%', '-', 15, 0.89, 0.89),\r\n    createData('Amortecimento', 'FP', '03/2017 - 09/2018', '65%', '-', 5, 0.96, 0.96),\r\n];\r\n\r\nexport default function Report() {\r\n    const [valueReconciliation, setValueReconciliation] = useState(\"Ordinary Least Squares\");\r\n\r\n    const handleChangeReconciliation = (event, valueReconciliation) => {\r\n        setValueReconciliation(valueReconciliation)\r\n    };\r\n\r\n    const [valueErrorMetrics, setValueErrorMetrics] = useState(\"RMSE\");\r\n\r\n    const handleChangeErrorMetrics = (event, valueErrorMetrics) => {\r\n        setValueErrorMetrics(valueErrorMetrics)\r\n    };\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            <Paper\r\n                sx={{\r\n                    p: 2,\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}\r\n                elevation={4}\r\n            >\r\n                <Typography style={{ marginBottom: \"15px\" }}>Visualização dos ajustes dos modelos com a série original</Typography>\r\n                <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n\r\n                    <Grid item xs={12} md={5} lg={4}>\r\n\r\n                        <Paper\r\n                            sx={{\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                            elevation={4}\r\n                        >\r\n                            <FormControl component=\"fieldset\">\r\n                                <FormLabel component=\"legend\">Técnicas de Reconciliação</FormLabel>\r\n                                <RadioGroup\r\n                                    aria-label=\"técnicas de reconciliação\"\r\n                                    name=\"radio-buttons-group\"\r\n                                    value={valueReconciliation}\r\n                                    onChange={handleChangeReconciliation}\r\n\r\n                                >\r\n                                    {reconciliation.map((name) => (\r\n                                        <FormControlLabel value={name} control={<Radio />} label={name} size=\"small\" />\r\n                                    ))}\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <TreeChart />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={7} lg={8}>\r\n                        <Paper\r\n                            sx={{\r\n                                p: 2,\r\n                                display: 'flex',\r\n                                flexDirection: 'column',\r\n                            }}\r\n                            elevation={4}\r\n                        >\r\n                            <LineChart />\r\n                            <LineChart />\r\n\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                <Paper\r\n                    sx={{\r\n                        p: 2,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginTop: '15px'\r\n                    }}\r\n                    elevation={4}\r\n                >\r\n                    <Typography style={{ marginBottom: \"15px\" }}>Comparação entre métricas e modelos</Typography>\r\n                    <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n                        <Grid item xs={12} md={5} lg={4}>\r\n\r\n                            <Paper\r\n                                sx={{\r\n                                    p: 2,\r\n                                    display: 'flex',\r\n                                    flexDirection: 'column',\r\n                                }}\r\n                                elevation={4}\r\n                            >\r\n                                <FormControl component=\"fieldset\">\r\n                                    <FormLabel component=\"legend\">Métricas de Erro</FormLabel>\r\n                                    <RadioGroup\r\n                                        aria-label=\"técnicas de reconciliação\"\r\n                                        name=\"radio-buttons-group\"\r\n                                        value={valueErrorMetrics}\r\n                                        onChange={handleChangeErrorMetrics}\r\n\r\n                                    >\r\n                                        {errorMetrics.map((name) => (\r\n                                            <FormControlLabel value={name} control={<Radio />} label={name} size=\"small\" />\r\n                                        ))}\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Paper>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={7} lg={8}>\r\n                            <BarChart />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n                <Paper\r\n                    sx={{\r\n                        p: 2,\r\n                        display: 'flex',\r\n                        flexDirection: 'column',\r\n                        marginTop: '15px'\r\n                    }}\r\n                    elevation={4}\r\n                >\r\n                    {/* <Typography style={{ marginBottom: \"15px\" }}>Comparação entre métricas e modelos</Typography> */}\r\n                    <Grid container spacing={3} maxWidth=\"lg\" direction={\"row\"}>\r\n                        <Grid item xs={12}>\r\n                            <Typography>Modelos Selecionados</Typography>\r\n                            <Divider />\r\n                            <TableContainer sx={{ maxHeight: 440 }}>\r\n                                <Table stickyHeader aria-label=\"sticky table\">\r\n                                    <TableHead>\r\n                                        <TableRow>\r\n                                            {columns.map((column) => (\r\n                                                <TableCell\r\n                                                    key={column.id}\r\n                                                    align={column.align}\r\n                                                    style={{ minWidth: column.minWidth }}\r\n                                                >\r\n                                                    {column.label}\r\n                                                </TableCell>\r\n                                            ))}\r\n                                        </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                        {rows\r\n                                            // .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                                            .map((row) => {\r\n                                                return (\r\n                                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                                                        {columns.map((column) => {\r\n                                                            const value = row[column.id];\r\n                                                            return (\r\n                                                                <TableCell key={column.id} align={column.align}>\r\n                                                                    {column.format && typeof value === 'number'\r\n                                                                        ? column.format(value)\r\n                                                                        : value}\r\n                                                                </TableCell>\r\n                                                            );\r\n                                                        })}\r\n                                                    </TableRow>\r\n                                                );\r\n                                            })}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Paper>\r\n            <Grid item xs={12} textAlign={\"end\"} style={{ marginTop: \"15px\" }}>\r\n                <Button variant=\"contained\" startIcon={<ArrowRightIcon />} >\r\n                    Fazer previsão\r\n                </Button>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import React from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport InputData from \"./pages/InputData\";\r\nimport Modeling from \"./pages/Modeling\";\r\nimport Report from \"./pages/Report\";\r\n\r\nexport const DashboardPage = '/';\r\n\r\nconst RoutesHtseer = () => {\r\n   return(\r\n       <Routes>\r\n          <Route element={ <Home/>} path = {DashboardPage} />\r\n          <Route element={ <Home/>} path = \"HTSeer\" />\r\n          <Route element = { <Home /> }  path=\"home\" />\r\n          <Route element = { <InputData /> }  path=\"inputData\" />\r\n          <Route element = { <Modeling /> }  path=\"modeling\" />\r\n          <Route element = { <Report /> }  path=\"report\" />\r\n          <Route element = { <h1>Not Found</h1> } path=\"*\" />\r\n       </Routes>\r\n   )\r\n}\r\n\r\nexport default RoutesHtseer;","import * as React from 'react';\r\nimport { styled, createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport MuiDrawer from '@mui/material/Drawer';\r\nimport Box from '@mui/material/Box';\r\nimport MuiAppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Divider from '@mui/material/Divider';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Badge from '@mui/material/Badge';\r\nimport Container from '@mui/material/Container';\r\nimport Link from '@mui/material/Link';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ListItems from \"./ListItems\";\r\nimport RoutesHtseer from '../routes';\r\n\r\n\r\nfunction Copyright(props) {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://mui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst AppBar = styled(MuiAppBar, {\r\n  shouldForwardProp: (prop) => prop !== 'open',\r\n})(({ theme, open }) => ({\r\n  zIndex: theme.zIndex.drawer + 1,\r\n  transition: theme.transitions.create(['width', 'margin'], {\r\n    easing: theme.transitions.easing.sharp,\r\n    duration: theme.transitions.duration.leavingScreen,\r\n  }),\r\n  ...(open && {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  }),\r\n}));\r\n\r\nconst Drawer = styled(MuiDrawer, { shouldForwardProp: (prop) => prop !== 'open' })(\r\n  ({ theme, open }) => ({\r\n    '& .MuiDrawer-paper': {\r\n      position: 'relative',\r\n      whiteSpace: 'nowrap',\r\n      width: drawerWidth,\r\n      transition: theme.transitions.create('width', {\r\n        easing: theme.transitions.easing.sharp,\r\n        duration: theme.transitions.duration.enteringScreen,\r\n      }),\r\n      boxSizing: 'border-box',\r\n      ...(!open && {\r\n        overflowX: 'hidden',\r\n        transition: theme.transitions.create('width', {\r\n          easing: theme.transitions.easing.sharp,\r\n          duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        width: theme.spacing(7),\r\n        [theme.breakpoints.up('sm')]: {\r\n          width: theme.spacing(9),\r\n        },\r\n      }),\r\n    },\r\n  }),\r\n);\r\n\r\nconst mdTheme = createTheme();\r\n\r\nfunction DashboardContent() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <ThemeProvider theme={mdTheme}>\r\n      <Box sx={{ display: 'flex' }}>\r\n        <CssBaseline />\r\n        <AppBar position=\"absolute\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              pr: '24px', // keep right padding when drawer closed\r\n            }}\r\n          >\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={toggleDrawer}\r\n              sx={{\r\n                marginRight: '36px',\r\n                ...(open && { display: 'none' }),\r\n              }}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h6\"\r\n              color=\"inherit\"\r\n              noWrap\r\n              sx={{ flexGrow: 1 }}\r\n            >\r\n              HTSeer\r\n            </Typography>\r\n            {/* <IconButton color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Drawer variant=\"permanent\" open={open}>\r\n          <Toolbar\r\n            sx={{\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'flex-end',\r\n              px: [1],\r\n            }}\r\n          >\r\n            <IconButton onClick={toggleDrawer}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n          <Divider />\r\n          <ListItems />\r\n          <Divider />\r\n        </Drawer>\r\n        <Box\r\n          component=\"main\"\r\n          sx={{\r\n            backgroundColor: (theme) =>\r\n              theme.palette.mode === 'light'\r\n                ? theme.palette.grey[100]\r\n                : theme.palette.grey[900],\r\n            flexGrow: 1,\r\n            height: '100vh',\r\n            overflow: 'auto',\r\n          }}\r\n        >\r\n          <Toolbar />\r\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n            {/* Menu com links para as rotas */}\r\n            <RoutesHtseer />\r\n            {/* Rodapé */}\r\n            <Copyright sx={{ pt: 4 }} />\r\n          </Container>\r\n        </Box>\r\n      </Box>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default function Dashboard() {\r\n  return <DashboardContent />;\r\n}","import './App.css';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Dashboard/>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}